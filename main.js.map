{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AppConfig.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/autosuggest-wrapper/autosuggest-wrapper.component.html","webpack:///./src/app/autosuggest-wrapper/autosuggest-wrapper.component.scss","webpack:///./src/app/autosuggest-wrapper/autosuggest-wrapper.component.ts","webpack:///./src/app/control-panel/commit-chooser/commit-chooser.component.html","webpack:///./src/app/control-panel/commit-chooser/commit-chooser.component.scss","webpack:///./src/app/control-panel/commit-chooser/commit-chooser.component.ts","webpack:///./src/app/control-panel/control-panel.actions.ts","webpack:///./src/app/control-panel/control-panel.component.html","webpack:///./src/app/control-panel/control-panel.component.scss","webpack:///./src/app/control-panel/control-panel.component.ts","webpack:///./src/app/control-panel/control-panel.module.ts","webpack:///./src/app/control-panel/control-panel.reducers.ts","webpack:///./src/app/control-panel/screenshot/screenshot.component.html","webpack:///./src/app/control-panel/screenshot/screenshot.component.scss","webpack:///./src/app/control-panel/screenshot/screenshot.component.ts","webpack:///./src/app/control-panel/search/search.component.html","webpack:///./src/app/control-panel/search/search.component.scss","webpack:///./src/app/control-panel/search/search.component.ts","webpack:///./src/app/control-panel/settings/filter/filter.component.html","webpack:///./src/app/control-panel/settings/filter/filter.component.scss","webpack:///./src/app/control-panel/settings/filter/filter.component.ts","webpack:///./src/app/control-panel/settings/metric-mapping/metric-mapping.component.html","webpack:///./src/app/control-panel/settings/metric-mapping/metric-mapping.component.scss","webpack:///./src/app/control-panel/settings/metric-mapping/metric-mapping.component.ts","webpack:///./src/app/control-panel/settings/settings.actions.ts","webpack:///./src/app/control-panel/settings/settings.component.html","webpack:///./src/app/control-panel/settings/settings.component.scss","webpack:///./src/app/control-panel/settings/settings.component.ts","webpack:///./src/app/control-panel/settings/settings.reducers.ts","webpack:///./src/app/control-panel/settings/view-control/view-control.component.html","webpack:///./src/app/control-panel/settings/view-control/view-control.component.scss","webpack:///./src/app/control-panel/settings/view-control/view-control.component.ts","webpack:///./src/app/enum/CommitReferenceType.ts","webpack:///./src/app/enum/CommitType.ts","webpack:///./src/app/enum/NodeType.ts","webpack:///./src/app/enum/ScreenType.ts","webpack:///./src/app/enum/ViewType.ts","webpack:///./src/app/geometry/block-connection.ts","webpack:///./src/app/helper/color-helper.ts","webpack:///./src/app/helper/element-analyzer.ts","webpack:///./src/app/pipes/key-value.pipe.ts","webpack:///./src/app/service/commit.service.ts","webpack:///./src/app/service/comparison-panel.service.ts","webpack:///./src/app/service/focus.service.ts","webpack:///./src/app/service/metric.service.ts","webpack:///./src/app/service/screenshot.service.ts","webpack:///./src/app/service/tooltip.service.ts","webpack:///./src/app/shared/actions.ts","webpack:///./src/app/shared/effects.ts","webpack:///./src/app/shared/reducers.ts","webpack:///./src/app/visualization/comparison-panel/comparison-panel.component.html","webpack:///./src/app/visualization/comparison-panel/comparison-panel.component.scss","webpack:///./src/app/visualization/comparison-panel/comparison-panel.component.ts","webpack:///./src/app/visualization/interaction-handler/interaction-handler.ts","webpack:///./src/app/visualization/legend/legend.component.html","webpack:///./src/app/visualization/legend/legend.component.scss","webpack:///./src/app/visualization/legend/legend.component.ts","webpack:///./src/app/visualization/loading-indicator/loading-indicator.component.html","webpack:///./src/app/visualization/loading-indicator/loading-indicator.component.scss","webpack:///./src/app/visualization/loading-indicator/loading-indicator.component.ts","webpack:///./src/app/visualization/screen/screen.component.html","webpack:///./src/app/visualization/screen/screen.component.scss","webpack:///./src/app/visualization/screen/screen.component.ts","webpack:///./src/app/visualization/tooltip/tooltip.component.html","webpack:///./src/app/visualization/tooltip/tooltip.component.scss","webpack:///./src/app/visualization/tooltip/tooltip.component.ts","webpack:///./src/app/visualization/view/abstract-view.ts","webpack:///./src/app/visualization/view/merged-view.ts","webpack:///./src/app/visualization/view/split-view.ts","webpack:///./src/app/visualization/visualization.actions.ts","webpack:///./src/app/visualization/visualization.component.html","webpack:///./src/app/visualization/visualization.component.scss","webpack:///./src/app/visualization/visualization.component.ts","webpack:///./src/app/visualization/visualization.module.ts","webpack:///./src/app/visualization/visualization.reducers.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {environment} from '../environments/environment';\nimport { IMetric } from './interfaces/IMetric';\n\nexport class AppConfig {\n    // CODERADAR SERVER CONFIG\n    static BASE_URL = 'http://localhost:8080';\n    static USERNAME = 'radar';\n    static PASSWORD = 'Password12!';\n\n    // METRIC NAME MAPPING\n    static METRIC_NAME_MAPPING: IMetric[] = [\n        { shortName: 'Lines of Code (LOC)', metricName: 'coderadar:size:loc:java' },\n        { shortName: 'Comment Lines of Code (CLOC)', metricName: 'coderadar:size:cloc:java' },\n        { shortName: 'Source Lines of Code (SLOC)', metricName: 'coderadar:size:sloc:java' },\n        { shortName: 'Effective Lines of Code (ELOC)', metricName: 'coderadar:size:eloc:java' },\n        { shortName: 'MagicNumber', metricName: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck' },\n        { shortName: 'ReturnCount', metricName: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck' },\n        // tslint:disable-next-line:max-line-length\n        { shortName: 'CyclomaticComplexity', metricName: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck' },\n        { shortName: 'JavaNCSS', metricName: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck' },\n        { shortName: 'NPathComplexity', metricName: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck' },\n        // tslint:disable-next-line:max-line-length\n        { shortName: 'ExecutableStatementCount', metricName: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck' }\n    ];\n\n    // VISUALIZATION SETTINGS\n    static EDGE_LENGTH_FACTOR = 2;\n    static HEIGHT_FACTOR = 0.1;\n    // static GLOBAL_MAX_GROUND_AREA = 100;\n    // static GLOBAL_MIN_GROUND_AREA = 1;\n    // static GLOBAL_MAX_HEIGHT = 100;\n    // static GLOBAL_MIN_HEIGHT = 1;\n    static BLOCK_SPACING = 5;\n    static MODULE_BLOCK_HEIGHT = 5;\n\n    // CAMERA SETTINGS\n    static CAMERA_NEAR = 0.1;\n    static CAMERA_FAR = 100000;\n    static CAMERA_DISTANCE_TO_FOCUSSED_ELEMENT = 100;\n    static CAMERA_ANIMATION_DURATION = 1500;\n\n    // COLORS\n    static COLOR_HIERARCHY_RANGE: string[] = ['#cccccc', '#525252'];\n    static COLOR_HEATMAP_RANGE: string[] = ['#ffffff', '#ffc905', '#f78400', '#e92100', '#9b1909', '#4f1609', '#5d0000'];\n    static COLOR_CONNECTION = '#000000';\n\n    static COLOR_FIRST_COMMIT = '#0e8cf3';\n    static COLOR_SECOND_COMMIT = '#ffb100';\n\n    static COLOR_ADDED_FILE = '#49c35c';\n    static COLOR_DELETED_FILE = '#d90206';\n    static COLOR_UNCHANGED_FILE = '#cccccc';\n\n    static getShortNameByMetricName(metricName: string): IMetric {\n        return this.METRIC_NAME_MAPPING.find(namePair => namePair.metricName === metricName);\n    }\n}\n","module.exports = \"<app-control-panel></app-control-panel>\\n<app-visualization></app-visualization>\"","module.exports = \"\"","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    constructor() {\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {Injector, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n\nimport {AppComponent} from './app.component';\nimport {ControlPanelModule} from './control-panel/control-panel.module';\nimport {VisualizationModule} from './visualization/visualization.module';\nimport {REDUCER_TOKEN, getReducers} from './shared/reducers';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {AppEffects} from './shared/effects';\nimport {ScreenShotService} from './service/screenshot.service';\nimport {FocusService} from './service/focus.service';\nimport {TooltipService} from './service/tooltip.service';\nimport {ComparisonPanelService} from './service/comparison-panel.service';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        ControlPanelModule,\n        VisualizationModule,\n        StoreModule.forRoot(REDUCER_TOKEN),\n        EffectsModule.forRoot([AppEffects]),\n        environment.production ? [] : StoreDevtoolsModule.instrument({ maxAge: 50 })\n    ],\n    providers: [\n        ScreenShotService,\n        FocusService,\n        TooltipService,\n        ComparisonPanelService,\n        {\n            provide: REDUCER_TOKEN,\n            useFactory: getReducers,\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"autosuggest-wrapper-container\\\" [ngClass]=\\\"{'align-right': alignRight}\\\">\\n    <input #inputElement class=\\\"form-control\\\"\\n           [placeholder]=\\\"placeholder\\\"\\n           ngui-auto-complete\\n           [(ngModel)]=\\\"model\\\"\\n           [source]=\\\"source\\\"\\n           value-property-name=\\\"id\\\"\\n           display-property-name=\\\"name\\\"\\n           [value-formatter]=\\\"valueFormatter\\\"\\n           [list-formatter]=\\\"listFormatter\\\"\\n           [no-match-found-text]=\\\"noMatchFoundText\\\"\\n           [match-formatted]=\\\"matchFormatted\\\"\\n           [accept-user-input]=false\\n           [disabled]=\\\"isDisabled\\\"\\n           (valueChanged)=\\\"handleValueChanged($event)\\\" />\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"handleClearInputClicked()\\\" [disabled]=\\\"isDisabled\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\"","module.exports = \".autosuggest-wrapper-container {\\n  position: relative; }\\n  .autosuggest-wrapper-container button.close {\\n    position: absolute;\\n    top: 50%;\\n    right: 2px;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%);\\n    background: #fff;\\n    padding: 5px;\\n    opacity: 1;\\n    outline: 0; }\\n  .autosuggest-wrapper-container button.close > span {\\n      color: #ccc; }\\n  .autosuggest-wrapper-container button.close > span:hover {\\n        color: #000; }\\n  .autosuggest-wrapper-container button:disabled {\\n    display: none; }\\n  .autosuggest-wrapper-container ngui-auto-complete {\\n    min-width: 100%;\\n    width: auto !important; }\\n  .autosuggest-wrapper-container.align-right ngui-auto-complete {\\n    left: auto !important;\\n    right: 0; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'app-autosuggest-wrapper',\n    encapsulation: ViewEncapsulation.None,\n    templateUrl: './autosuggest-wrapper.component.html',\n    styleUrls: ['./autosuggest-wrapper.component.scss']\n})\nexport class AutosuggestWrapperComponent implements OnInit {\n\n    @ViewChild('inputElement') inputElement;\n\n    @Input() model: any;\n    @Input() source: any;\n    @Input() placeholder: string;\n    @Input() noMatchFoundText: string;\n    @Input() matchFormatted: boolean;\n    @Input() valuePropertyName: string;\n    @Input() displayPropertyName: string;\n    @Input() valueFormatter: any;\n    @Input() listFormatter: any;\n    @Input() isDisabled: boolean;\n    @Input() alignRight = false;\n\n    @Output() valueChanged = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    handleClearInputClicked() {\n        this.model = null;\n        this.inputElement.nativeElement.focus();\n    }\n\n    handleValueChanged(chosenModel: any) {\n        this.valueChanged.emit(chosenModel);\n    }\n\n}\n","module.exports = \"<app-autosuggest-wrapper\\n        [placeholder]=\\\"'Datum, Commit-ID, Autor'\\\"\\n        [(model)]=\\\"selected\\\"\\n        [source]=\\\"commits\\\"\\n        [valuePropertyName]=\\\"'id'\\\"\\n        [displayPropertyName]=\\\"'name'\\\"\\n        [noMatchFoundText]=\\\"'Nichts gefunden.'\\\"\\n        [matchFormatted]=\\\"true\\\"\\n        [valueFormatter]=\\\"formatCommit\\\"\\n        [listFormatter]=\\\"formatCommit\\\"\\n        [isDisabled]=\\\"isDisabled\\\"\\n        (valueChanged)=\\\"handleCommitChanged($event)\\\">\\n</app-autosuggest-wrapper>\\n\\n<p *ngIf=\\\"loading\\\">LADE</p>\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ICommit} from '../../interfaces/ICommit';\nimport {CommitType} from '../../enum/CommitType';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-commit-chooser',\n    templateUrl: './commit-chooser.component.html',\n    styleUrls: ['./commit-chooser.component.scss']\n})\nexport class CommitChooserComponent implements OnInit {\n\n    @Input() commitType: CommitType;\n    @Input() commits: ICommit[];\n    @Input() selected: ICommit;\n    @Input() loading: boolean;\n    @Input() isDisabled: boolean;\n\n    @Output() changeCommit = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    handleCommitChanged(chosenModel: ICommit) {\n        this.changeCommit.emit({commitType: this.commitType, commit: chosenModel});\n    }\n\n    formatCommit(data: any): string {\n        const formattedDateAndTime = moment(data.timestamp).format('DD.MM.YYYY HH:mm');\n        return `${formattedDateAndTime} ${data.author}, ${data.name}`;\n    }\n\n}\n","import {Action} from '@ngrx/store';\nimport {CommitType} from '../enum/CommitType';\nimport {ICommit} from '../interfaces/ICommit';\nimport {IActionWithPayload} from '../interfaces/IActionWithPayload';\n\nexport const LOAD_COMMITS = 'LOAD_COMMITS';\nexport const LOAD_COMMITS_SUCCESS = 'LOAD_COMMITS_SUCCESS';\nexport const LOAD_COMMITS_ERROR = 'LOAD_COMMITS_ERROR';\nexport const CHANGE_COMMIT = 'CHANGE_COMMIT';\nexport const ADD_SCREENSHOT = 'ADD_SCREENSHOT';\nexport const CLEAR_SCREENSHOTS = 'CLEAR_SCREENSHOTS';\n\nexport function loadCommits(): Action {\n    return {\n        type: LOAD_COMMITS\n    };\n}\n\nexport function loadCommitsSuccess(commits: ICommit[]): IActionWithPayload<ICommit[]> {\n    return {\n        type: LOAD_COMMITS_SUCCESS,\n        payload: commits\n    };\n}\n\nexport function loadCommitsError(error: string): IActionWithPayload<string> {\n    return {\n        type: LOAD_COMMITS_ERROR,\n        payload: error\n    };\n}\n\nexport function changeCommit(commitType: CommitType, commit: ICommit): IActionWithPayload<{commitType: CommitType, commit: ICommit}> {\n    return {\n        type: CHANGE_COMMIT,\n        payload: {\n            commitType: commitType,\n            commit: commit\n        }\n    };\n}\n\nexport function addScreenshot(screenshotObject: any): IActionWithPayload<any> {\n    return {\n        type: ADD_SCREENSHOT,\n        payload: screenshotObject\n    };\n}\n\nexport function clearScreenshots(): Action {\n    return {\n        type: CLEAR_SCREENSHOTS\n    };\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <form id=\\\"control-panel\\\" class=\\\"row align-items-center justify-content-between\\\">\\n        <div class=\\\"col-4\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\">\\n                    <small>Erste Revision</small>\\n                    <app-commit-chooser\\n                            [commitType]=\\\"commitTypes.left\\\"\\n                            [commits]=\\\"commits$ | async\\\"\\n                            [loading]=\\\"commitsLoading$ | async\\\"\\n                            [selected]=\\\"leftCommit$ | async\\\"\\n                            (changeCommit)=\\\"handleCommitChanged($event)\\\"></app-commit-chooser>\\n                </div>\\n\\n                <div class=\\\"col-6\\\">\\n                    <small>Zweite Revision</small>\\n                    <app-commit-chooser\\n                            [commitType]=\\\"commitTypes.right\\\"\\n                            [commits]=\\\"commits$ | async\\\"\\n                            [loading]=\\\"commitsLoading$ | async\\\"\\n                            [selected]=\\\"rightCommit$ | async\\\"\\n                            [isDisabled]=\\\"disableRightSelect\\\"\\n                            (changeCommit)=\\\"handleCommitChanged($event)\\\"></app-commit-chooser>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"settings-panel\\\" class=\\\"col-6\\\">\\n            <app-settings></app-settings>\\n            <app-screenshot\\n                    [activeViewType]=\\\"activeViewType$ | async\\\"\\n                    [screenShots]=\\\"screenShots$ | async\\\"\\n                    (handleTakeScreenshot)=\\\"handleTakeScreenshot()\\\"\\n                    (handleRemoveScreenshots)=\\\"handleRemoveScreenshots()\\\">\\n            </app-screenshot>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n            <small>Suche</small>\\n            <app-search [uniqueFileList]=\\\"uniqueFileList$ | async\\\" (startSearch)=\\\"handleSearchStarted($event)\\\"></app-search>\\n        </div>\\n    </form>\\n</div>\"","module.exports = \"#control-panel {\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  height: 80px;\\n  background: #fff;\\n  box-shadow: rgba(0, 0, 0, 0.2) 0 2px 6px 0;\\n  z-index: 101; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CommitType} from '../enum/CommitType';\nimport {Store} from '@ngrx/store';\nimport * as fromRoot from '../shared/reducers';\nimport {changeCommit, loadCommits} from './control-panel.actions';\nimport {ICommit} from '../interfaces/ICommit';\nimport {Observable} from 'rxjs/Observable';\nimport {ViewType} from '../enum/ViewType';\nimport {ScreenShotService} from '../service/screenshot.service';\nimport {FocusService} from '../service/focus.service';\nimport { environment } from 'environments/environment';\n\n@Component({\n    selector: 'app-control-panel',\n    templateUrl: './control-panel.component.html',\n    styleUrls: ['./control-panel.component.scss']\n})\nexport class ControlPanelComponent implements OnInit {\n\n    commitTypes: any = {\n        left: CommitType.LEFT,\n        right: CommitType.RIGHT\n    };\n\n    commits$: Observable<ICommit[]>;\n    leftCommit$: Observable<ICommit>;\n    rightCommit$: Observable<ICommit>;\n    commitsLoading$: Observable<boolean>;\n\n    uniqueFileList$: Observable<string[]>;\n\n    activeViewType$: Observable<ViewType>;\n    screenShots$: Observable<any[]>;\n\n    // disable the second commit chooser for demo purposes\n    disableRightSelect: boolean = !environment.useCoderadarEndpoint;\n\n    constructor(private store: Store<fromRoot.AppState>, private screenShotService: ScreenShotService, private focusService: FocusService) {\n    }\n\n    ngOnInit() {\n        this.store.dispatch(loadCommits());\n\n        this.commits$ = this.store.select(fromRoot.getCommits);\n        this.commitsLoading$ = this.store.select(fromRoot.getCommitsLoading);\n        this.leftCommit$ = this.store.select(fromRoot.getLeftCommit);\n        this.rightCommit$ = this.store.select(fromRoot.getRightCommit);\n\n        this.uniqueFileList$ = this.store.select(fromRoot.getUniqueFileList);\n\n        this.activeViewType$ = this.store.select(fromRoot.getActiveViewType);\n        this.screenShots$ = this.screenShotService.getScreenShots();\n    }\n\n    handleCommitChanged(payload: {commitType: CommitType, commit: ICommit}) {\n        this.store.dispatch(changeCommit(payload.commitType, payload.commit));\n    }\n\n    handleSearchStarted(chosenItem: string) {\n        this.focusService.focusElement(chosenItem);\n    }\n\n    handleTakeScreenshot() {\n        this.screenShotService.requestScreenShot();\n    }\n\n    handleRemoveScreenshots() {\n        this.screenShotService.clearScreenShots();\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {ControlPanelComponent} from './control-panel.component';\nimport {SettingsComponent} from './settings/settings.component';\nimport {ViewControlComponent} from './settings/view-control/view-control.component';\nimport {FormsModule} from '@angular/forms';\nimport {NguiAutoCompleteModule} from '@ngui/auto-complete';\nimport {CommitChooserComponent} from './commit-chooser/commit-chooser.component';\nimport {CommitService} from '../service/commit.service';\nimport {environment} from '../../environments/environment';\nimport {SearchComponent} from './search/search.component';\nimport {FilterComponent} from './settings/filter/filter.component';\nimport {MetricMappingComponent} from './settings/metric-mapping/metric-mapping.component';\nimport {ScreenshotComponent} from './screenshot/screenshot.component';\nimport {AutosuggestWrapperComponent} from '../autosuggest-wrapper/autosuggest-wrapper.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NguiAutoCompleteModule,\n        FontAwesomeModule\n    ],\n    declarations: [\n        ControlPanelComponent,\n        SettingsComponent,\n        ViewControlComponent,\n        CommitChooserComponent,\n        SearchComponent,\n        FilterComponent,\n        MetricMappingComponent,\n        ScreenshotComponent,\n        AutosuggestWrapperComponent\n    ],\n    exports: [\n        ControlPanelComponent\n    ],\n    providers: [\n        CommitService\n    ]\n})\nexport class ControlPanelModule {\n}\n","import * as ControlPanelActions from './control-panel.actions';\nimport {ActionReducer} from '@ngrx/store';\nimport {ICommit} from '../interfaces/ICommit';\nimport {CommitType} from '../enum/CommitType';\nimport _ from 'lodash';\nimport {IActionWithPayload} from '../interfaces/IActionWithPayload';\n\nexport interface ControlPanelState {\n    commits: ICommit[];\n    commitsLoading: boolean;\n    leftCommit: ICommit;\n    rightCommit: ICommit;\n    screenshots: any[];\n}\n\nconst initialState: ControlPanelState = {\n    commits: [],\n    commitsLoading: false,\n    leftCommit: null,\n    rightCommit: null,\n    screenshots: []\n};\n\nexport const ControlPanelReducer: ActionReducer<ControlPanelState> = (state = initialState, action: IActionWithPayload<any>) => {\n    let newState;\n    switch (action.type) {\n        case ControlPanelActions.LOAD_COMMITS:\n            newState = Object.assign({}, state);\n            newState.commitsLoading = true;\n            return newState;\n\n        case ControlPanelActions.LOAD_COMMITS_SUCCESS:\n            newState = Object.assign({}, state);\n            newState.commits = _.sortBy(action.payload, (commit: ICommit) => commit.timestamp);\n            newState.commitsLoading = false;\n            newState.leftCommit = newState.commits[0];\n            newState.rightCommit = newState.commits[1];\n            return newState;\n\n        case ControlPanelActions.LOAD_COMMITS_ERROR:\n            newState = Object.assign({}, state);\n            newState.commitsLoading = false;\n            console.error(`Error while loading commits: ${action.payload}`);\n            return state;\n\n        case ControlPanelActions.CHANGE_COMMIT:\n            newState = Object.assign({}, state);\n\n            if (action.payload.commitType === CommitType.LEFT) {\n                newState.leftCommit = action.payload.commit;\n            } else if (action.payload.commitType === CommitType.RIGHT) {\n                newState.rightCommit = action.payload.commit;\n            } else {\n                throw new Error(`Invalid CommitType ${action.payload.commitType}!`);\n            }\n\n            return newState;\n\n        case ControlPanelActions.ADD_SCREENSHOT:\n            newState = Object.assign({}, state);\n            newState.screenshots = [...state.screenshots, action.payload];\n            return newState;\n\n        case ControlPanelActions.CLEAR_SCREENSHOTS:\n            newState = Object.assign({}, state);\n            newState.screenshots = [];\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\nexport const getCommits = (state: ControlPanelState) => state.commits;\n\nexport const getCommitsLoading = (state: ControlPanelState) => state.commitsLoading;\n\nexport const getLeftCommit = (state: ControlPanelState) => state.leftCommit;\n\nexport const getRightCommit = (state: ControlPanelState) => state.rightCommit;\n\nexport const getScreenshots = (state: ControlPanelState) => state.screenshots;\n","module.exports = \"<div class=\\\"btn-group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"takeScreenshot()\\\">\\n        <fa-icon [icon]=\\\"faCamera\\\"></fa-icon>\\n        <span *ngIf=\\\"screenShots.length\\\" class=\\\"badge badge-pill badge-secondary ml-1\\\">{{screenShots.length}}</span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\n    </button>\\n    <div id=\\\"screenshot-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>GIF erstellen für:</label>\\n            <div class=\\\"btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"generateGif(screenTypes.left)\\\">{{activeViewType === viewTypes.split ? 'Erster Commit' : 'Kombinierte Ansicht'}}</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"generateGif(screenTypes.right)\\\" *ngIf=\\\"activeViewType === viewTypes.split\\\">Zweiter Commit</button>\\n            </div>\\n        </div>\\n\\n        <img *ngIf=\\\"gifSource && !isGenerating\\\" id=\\\"gif\\\" src=\\\"{{gifSource}}\\\">\\n        <p *ngIf=\\\"isGenerating\\\">GIF wird erstellt ...</p>\\n        <small *ngIf=\\\"!gifSource && !isGenerating\\\">Ein GIF wird aus gespeicherten Screenshots erzeugt (Button <fa-icon [icon]=\\\"faCamera\\\"></fa-icon> )</small>\\n\\n        <div class=\\\"form-group\\\" *ngIf=\\\"gifSource\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeScreenshots()\\\">zurücksetzen</button>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"img#gif {\\n  width: 100%;\\n  margin-bottom: 1rem; }\\n\\n.btn-group {\\n  padding: 0 2px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ScreenType} from '../../enum/ScreenType';\nimport {ViewType} from '../../enum/ViewType';\nimport {faCamera} from '@fortawesome/free-solid-svg-icons';\ndeclare var gifshot: any;\ndeclare var $: any;\n\n@Component({\n    selector: 'app-screenshot',\n    templateUrl: './screenshot.component.html',\n    styleUrls: ['./screenshot.component.scss']\n})\nexport class ScreenshotComponent implements OnInit {\n\n    faCamera = faCamera;\n\n    @Input() activeViewType: ViewType;\n    @Input() screenShots: any[];\n\n    @Output() handleTakeScreenshot = new EventEmitter();\n    @Output() handleRemoveScreenshots = new EventEmitter();\n\n    screenTypes: any = {\n        left: ScreenType.LEFT,\n        right: ScreenType.RIGHT\n    };\n\n    viewTypes: any = {\n        split: ViewType.SPLIT,\n        merged: ViewType.MERGED\n    };\n\n    gifSource: string;\n    isGenerating = false;\n\n    ngOnInit() {\n        // prevent bootstrap dropdown from being closed by clicking on its content\n        $(document).on('click', '#screenshot-dropdown', function (e) {\n            e.stopPropagation();\n        });\n    }\n\n    takeScreenshot() {\n        this.handleTakeScreenshot.emit();\n    }\n\n    generateGif(screenType: ScreenType) {\n        if (this.screenShots.length > 0) {\n            const images = this.screenShots\n                .filter(screenShotObject => screenShotObject.screenType === screenType)\n                .map(screenShotObject => screenShotObject.file);\n            if (!images.length) {\n                return;\n            }\n\n            this.isGenerating = true;\n            gifshot.createGIF({\n                images: images,\n                interval: 1,\n                gifWidth: this.activeViewType === ViewType.SPLIT ? window.innerWidth / 2 : window.innerWidth,\n                gifHeight: window.innerHeight\n            }, (obj) => {\n                if (!obj.error) {\n                    this.gifSource = obj.image;\n                }\n\n                this.isGenerating = false;\n            });\n        } else {\n            alert(`Es wurden keine gespeicherten Screenshots gefunden.`);\n        }\n    }\n\n    removeScreenshots() {\n        this.handleRemoveScreenshots.emit();\n        this.gifSource = undefined;\n    }\n\n}\n","module.exports = \"<app-autosuggest-wrapper\\n        [placeholder]=\\\"'Datei, Modul, ...'\\\"\\n        [source]=\\\"uniqueFileList\\\"\\n        [noMatchFoundText]=\\\"'Nichts gefunden.'\\\"\\n        [listFormatter]=\\\"autocompleteListFormatter\\\"\\n        (valueChanged)=\\\"handleSearchChanged($event)\\\"\\n        [alignRight]=\\\"true\\\">\\n</app-autosuggest-wrapper>\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n    @Input() uniqueFileList: string[] = [];\n\n    @Output() startSearch = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    handleSearchChanged(chosenItem: string) {\n        this.startSearch.emit(chosenItem);\n    }\n\n    autocompleteListFormatter(data: string): string {\n        return `<span title=\"${data}\">${data}</span>`;\n    }\n\n}\n","module.exports = \"<div class=\\\"btn-group\\\">\\n    <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <fa-icon [icon]=\\\"faFilter\\\"></fa-icon>\\n    </button>\\n    <div id=\\\"filter-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n        <div class=\\\"custom-controls-stacked\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-unchanged\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.unmodified\\\" (change)=\\\"handleFilterChanged()\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-unchanged\\\">unverändert</label>\\n            </div>\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-changed\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.modified\\\" (change)=\\\"handleFilterChanged()\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-changed\\\">verändert</label>\\n            </div>\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-deleted\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.deleted\\\" (change)=\\\"handleFilterChanged()\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-deleted\\\">gelöscht</label>\\n            </div>\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-added\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.added\\\" (change)=\\\"handleFilterChanged()\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-added\\\">hinzugefügt</label>\\n            </div>\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-moved\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.renamed\\\" (change)=\\\"handleFilterChanged()\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-moved\\\">umbenannt/verschoben</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".btn-group {\\n  padding: 0 2px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IFilter} from 'app/interfaces/IFilter';\nimport {faFilter} from '@fortawesome/free-solid-svg-icons';\ndeclare var $: any;\n\n@Component({\n    selector: 'app-filter',\n    templateUrl: './filter.component.html',\n    styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n\n    faFilter = faFilter;\n\n    @Input() activeFilter: IFilter;\n\n    @Output() filterChanged = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        // prevent bootstrap dropdown from being closed by clicking on its content\n        $(document).on('click', '#filter-dropdown', function (e) {\n            e.stopPropagation();\n        });\n    }\n\n    handleFilterChanged() {\n        this.filterChanged.emit(this.activeFilter);\n    }\n\n}\n","module.exports = \"<div class=\\\"btn-group\\\">\\n    <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        <fa-icon [icon]=\\\"faChartBar\\\"></fa-icon>\\n    </button>\\n    <div id=\\\"metric-mapping-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"height-metric-name\\\"><fa-icon [icon]=\\\"faArrowsAltV\\\"></fa-icon> Höhe</label>\\n            <select id=\\\"height-metric-name\\\" class=\\\"custom-select w-auto\\\" [(ngModel)]=\\\"metricMapping.heightMetricName\\\">\\n                <option *ngFor=\\\"let metric of availableMetrics\\\" [ngValue]=\\\"metric.metricName\\\">{{metric.shortName}}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"groundarea-metric-name\\\"><fa-icon [icon]=\\\"faArrowsAlt\\\"></fa-icon> Grundfläche</label>\\n            <select id=\\\"groundarea-metric-name\\\" class=\\\"custom-select w-auto\\\" [(ngModel)]=\\\"metricMapping.groundAreaMetricName\\\">\\n                <option *ngFor=\\\"let metric of availableMetrics\\\" [ngValue]=\\\"metric.metricName\\\">{{metric.shortName}}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"color-metric-name\\\"><fa-icon [icon]=\\\"faPalette\\\"></fa-icon> Farbe</label>\\n            <select id=\\\"color-metric-name\\\" class=\\\"custom-select w-auto\\\" [(ngModel)]=\\\"metricMapping.colorMetricName\\\">\\n                <option *ngFor=\\\"let metric of availableMetrics\\\" [ngValue]=\\\"metric.metricName\\\">{{metric.shortName}}</option>\\n            </select>\\n        </div>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"applyMetricMappings()\\\">übernehmen</button>\\n    </div>\\n</div>\"","module.exports = \".btn-group {\\n  padding: 0 2px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IMetricMapping} from '../../../interfaces/IMetricMapping';\nimport {faChartBar, faArrowsAltV, faArrowsAlt, faPalette} from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\nimport { IMetric } from '../../../interfaces/IMetric';\nimport { Store } from '@ngrx/store';\nimport * as fromRoot from '../../../shared/reducers';\ndeclare var $: any;\n\n@Component({\n    selector: 'app-metric-mapping',\n    templateUrl: './metric-mapping.component.html',\n    styleUrls: ['./metric-mapping.component.scss']\n})\nexport class MetricMappingComponent implements OnInit {\n\n    faChartBar = faChartBar;\n    faArrowsAltV = faArrowsAltV;\n    faArrowsAlt = faArrowsAlt;\n    faPalette = faPalette;\n\n    @Input() metricMapping: IMetricMapping;\n    @Input() availableMetrics: IMetric[];\n\n    @Output() metricMappingChanged = new EventEmitter();\n\n    constructor(private store: Store<fromRoot.AppState>) {\n    }\n\n    ngOnInit() {\n        // prevent bootstrap dropdown from being closed by clicking on its content\n        $(document).on('click', '#metric-mapping-dropdown', function (e) {\n            // if the button is clicked, the popup does need to be closed, so exclude the button from this exception...\n            if (e.target.tagName !== 'BUTTON') {\n                e.stopPropagation();\n            }\n        });\n    }\n\n    applyMetricMappings() {\n        this.metricMappingChanged.emit(this.metricMapping);\n    }\n\n}\n","import {ViewType} from '../../enum/ViewType';\nimport {IFilter} from '../../interfaces/IFilter';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\nimport {IActionWithPayload} from '../../interfaces/IActionWithPayload';\n\nexport const CHANGE_VIEW_TYPE = 'CHANGE_VIEW_TYPE';\nexport const CHANGE_ACTIVE_FILTER = 'CHANGE_ACTIVE_FILTER';\nexport const SET_METRIC_MAPPING = 'SET_METRIC_MAPPING';\n\nexport function changeViewType(viewType: ViewType): IActionWithPayload<ViewType> {\n    return {\n        type: CHANGE_VIEW_TYPE,\n        payload: viewType\n    };\n}\n\nexport function changeActiveFilter(filter: IFilter): IActionWithPayload<IFilter> {\n    return {\n        type: CHANGE_ACTIVE_FILTER,\n        payload: filter\n    };\n}\n\nexport function setMetricMapping(mapping: IMetricMapping): IActionWithPayload<IMetricMapping> {\n    return {\n        type: SET_METRIC_MAPPING,\n        payload: mapping\n    };\n}\n","module.exports = \"<div>\\n    <small>Einstellungen</small>\\n</div>\\n<app-view-control [activeViewType]=\\\"activeViewType$ | async\\\" (viewTypeChanged)=\\\"handleViewTypeChanged($event)\\\"></app-view-control>\\n<app-filter [activeFilter]=\\\"activeFilter$ | async\\\" (filterChanged)=\\\"handleFilterChanged($event)\\\"></app-filter>\\n<app-metric-mapping [metricMapping]=\\\"metricMapping$ | async\\\" [availableMetrics]=\\\"availableMetrics$ | async\\\" (metricMappingChanged)=\\\"handleMetricMappingChanged($event)\\\"></app-metric-mapping>\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {ViewType} from '../../enum/ViewType';\nimport {Store} from '@ngrx/store';\nimport * as fromRoot from '../../shared/reducers';\nimport {changeActiveFilter, changeViewType, setMetricMapping} from './settings.actions';\nimport {IFilter} from '../../interfaces/IFilter';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\nimport { IMetric } from '../../interfaces/IMetric';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n    activeViewType$: Observable<ViewType>;\n    activeFilter$: Observable<IFilter>;\n    availableMetrics$: Observable<IMetric[]>;\n    metricMapping$: Observable<IMetricMapping>;\n\n    constructor(private store: Store<fromRoot.AppState>) {\n    }\n\n    ngOnInit() {\n        this.activeViewType$ = this.store.select(fromRoot.getActiveViewType);\n        this.activeFilter$ = this.store.select(fromRoot.getActiveFilter);\n        this.availableMetrics$ = this.store.select(fromRoot.getAvailableMetrics);\n        this.metricMapping$ = this.store.select(fromRoot.getMetricMapping);\n    }\n\n    handleViewTypeChanged(viewType: ViewType) {\n        this.store.dispatch(changeViewType(viewType));\n    }\n\n    handleFilterChanged(filter: IFilter) {\n        this.store.dispatch(changeActiveFilter(filter));\n    }\n\n    handleMetricMappingChanged(metricMapping: IMetricMapping) {\n        this.store.dispatch(setMetricMapping(metricMapping));\n    }\n\n}\n","import * as SettingsActions from './settings.actions';\nimport {ActionReducer} from '@ngrx/store';\nimport {ViewType} from '../../enum/ViewType';\nimport {IFilter} from '../../interfaces/IFilter';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\nimport {AppConfig} from '../../AppConfig';\nimport {IActionWithPayload} from '../../interfaces/IActionWithPayload';\n\nexport interface SettingsState {\n    activeViewType: ViewType;\n    activeFilter: IFilter;\n    metricMapping: IMetricMapping;\n}\n\nconst initialState: SettingsState = {\n    activeViewType: ViewType.SPLIT,\n    activeFilter: {\n        unmodified: true,\n        modified: true,\n        deleted: true,\n        added: true,\n        renamed: true\n    },\n    metricMapping: {\n        heightMetricName: null,\n        groundAreaMetricName: null,\n        colorMetricName: null\n    }\n};\n\nexport const SettingsReducer: ActionReducer<SettingsState> = (state = initialState, action: IActionWithPayload<any>) => {\n    let newState;\n    switch (action.type) {\n        case SettingsActions.CHANGE_VIEW_TYPE:\n            newState = Object.assign({}, state);\n            newState.activeViewType = action.payload;\n            return newState;\n\n        case SettingsActions.CHANGE_ACTIVE_FILTER:\n            newState = Object.assign({}, state);\n            newState.activeFilter = Object.assign({}, state.activeFilter, action.payload);\n            return newState;\n\n        case SettingsActions.SET_METRIC_MAPPING:\n            newState = Object.assign({}, state);\n            newState.metricMapping = Object.assign({}, state.metricMapping, action.payload);\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\nexport const getActiveViewType = (state: SettingsState) => state.activeViewType;\n\nexport const getActiveFilter = (state: SettingsState) => state.activeFilter;\n\nexport const getMetricMapping = (state: SettingsState) => state.metricMapping;\n","module.exports = \"<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n    <input type=\\\"radio\\\" id=\\\"radio-splitscreen\\\" name=\\\"radio-group-screen\\\" class=\\\"custom-control-input\\\" [value]=\\\"viewTypes.split\\\" (click)=\\\"changeViewType(viewTypes.split)\\\" [checked]=\\\"activeViewType === viewTypes.split\\\" />\\n    <label class=\\\"custom-control-label\\\" for=\\\"radio-splitscreen\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Geteilte Ansicht\\\" #splitScreenLabel>\\n        <fa-icon [icon]=\\\"faSquare\\\" size=\\\"lg\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"faSquare\\\" size=\\\"lg\\\"></fa-icon>\\n    </label>\\n</div>\\n<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n    <input type=\\\"radio\\\" id=\\\"radio-fullscreen\\\" name=\\\"radio-group-screen\\\" class=\\\"custom-control-input\\\" [value]=\\\"viewTypes.merged\\\" (click)=\\\"changeViewType(viewTypes.merged)\\\" [checked]=\\\"activeViewType === viewTypes.merged\\\" />\\n    <label class=\\\"custom-control-label\\\" for=\\\"radio-fullscreen\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"bottom\\\" title=\\\"Kombinierte Ansicht\\\" #fullScreenLabel>\\n        <fa-icon [icon]=\\\"faClone\\\" size=\\\"lg\\\"></fa-icon>\\n    </label>\\n</div>\"","module.exports = \"label {\\n  cursor: pointer; }\\n\\nfa-icon {\\n  color: #6c757d; }\\n\\nfa-icon + fa-icon {\\n    margin-left: 1px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef} from '@angular/core';\nimport {ViewType} from '../../../enum/ViewType';\nimport {faSquare, faClone} from '@fortawesome/free-regular-svg-icons';\n\ndeclare var $: any;\n\n@Component({\n    selector: 'app-view-control',\n    templateUrl: './view-control.component.html',\n    styleUrls: ['./view-control.component.scss']\n})\nexport class ViewControlComponent implements OnInit {\n\n    faSquare = faSquare;\n    faClone = faClone;\n\n    viewTypes: any = {\n        split: ViewType.SPLIT,\n        merged: ViewType.MERGED\n    };\n\n    @Input() activeViewType: ViewType;\n\n    @Output() viewTypeChanged = new EventEmitter();\n\n    @ViewChild('splitScreenLabel') splitScreenLabelRef: ElementRef;\n    @ViewChild('fullScreenLabel') fullScreenLabelRef: ElementRef;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        $(this.splitScreenLabelRef.nativeElement).tooltip();\n        $(this.fullScreenLabelRef.nativeElement).tooltip();\n    }\n\n    changeViewType(value) {\n        this.viewTypeChanged.emit(value === 0 ? ViewType.SPLIT : ViewType.MERGED);\n    }\n\n}\n","export enum CommitReferenceType {\n    THIS,\n    OTHER\n}\n","export enum CommitType {\n    LEFT,\n    RIGHT\n}\n","export enum NodeType {\n    MODULE = <any>'MODULE',\n    FILE = <any>'FILE',\n    CONNECTION = <any>'CONNECTION'\n}\n","export enum ScreenType {\n    LEFT,\n    RIGHT\n}\n","export enum ViewType {\n    SPLIT,\n    MERGED\n}\n","import {Geometry, LineBasicMaterial, Line, Vector3, QuadraticBezierCurve3} from 'three';\nimport {AppConfig} from '../AppConfig';\nimport {NodeType} from '../enum/NodeType';\n\nexport class BlockConnection {\n\n    curveObject: Line;\n\n    constructor(fromElement, toElement) {\n        const from = fromElement.position.clone();\n        from.x += fromElement.scale.x / 2;\n        from.y += fromElement.scale.y;\n        from.z += fromElement.scale.z / 2;\n\n        const to = toElement.position.clone();\n        to.x += toElement.scale.x / 2;\n        to.y += toElement.scale.y;\n        to.z += toElement.scale.z / 2;\n\n        const distance = from.distanceTo(to);\n\n        const via = new Vector3((from.x + to.x) / 2, this.getHeightByDistance(distance), (from.z + to.z) / 2);\n\n        const curve = new QuadraticBezierCurve3(from, via, to);\n\n        const geometry = new Geometry();\n        geometry.vertices = curve.getPoints(50);\n        const material = new LineBasicMaterial({ color: AppConfig.COLOR_CONNECTION });\n        this.curveObject = new Line(geometry, material);\n\n        this.curveObject.userData = {\n            type: NodeType.CONNECTION,\n            changeTypes: {\n                renamed: true\n            }\n        };\n    }\n\n    getCurve(): Line {\n        return this.curveObject;\n    }\n\n    private getHeightByDistance(distance) {\n        return 0.0001 * Math.pow(distance, 2) + 0.8 * distance + 30;\n    }\n}\n","import {AppConfig} from '../AppConfig';\nimport {ScreenType} from '../enum/ScreenType';\nimport {Color} from 'three';\ndeclare var chroma: any;\n\nexport class ColorHelper {\n\n    static getColorByPosition(screenType: ScreenType): string {\n        return screenType === ScreenType.LEFT ? AppConfig.COLOR_FIRST_COMMIT : AppConfig.COLOR_SECOND_COMMIT;\n    }\n\n    static getContraryColorByColor(color: string): string {\n        return color === AppConfig.COLOR_FIRST_COMMIT ? AppConfig.COLOR_SECOND_COMMIT : AppConfig.COLOR_FIRST_COMMIT;\n    }\n\n    static getColorByMetricValue(value: number, max: number, min: number): THREE.Color {\n        return this.getColorScale(AppConfig.COLOR_HEATMAP_RANGE, value, max, min);\n    }\n\n    static getColorByLevelValue(value: number, max: number, min: number): THREE.Color {\n        return this.getColorScale(AppConfig.COLOR_HIERARCHY_RANGE, value, max, min);\n    }\n\n    static getColorScale(range, value: number, max: number, min: number): THREE.Color {\n        const colorScale = chroma.scale(range);\n        const hexValue = colorScale(value / (max + min)).hex();\n        return new Color(hexValue);\n    }\n\n}\n","import {CommitReferenceType} from '../enum/CommitReferenceType';\nimport {INode} from '../interfaces/INode';\nimport {ScreenType} from '../enum/ScreenType';\nimport {NodeType} from '../enum/NodeType';\n\nexport class ElementAnalyzer {\n\n    static findElementByName(nodes: any, elementName: string): INode {\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        let foundElement: INode;\n\n        for (const node of nodes) {\n            if (node.name === elementName) {\n                foundElement = node;\n            }\n\n            // recursion\n            if (node.children && node.children.length > 0 && !foundElement) {\n                foundElement = this.findElementByName(node.children, elementName);\n            }\n        }\n\n        return foundElement;\n    }\n\n    static generateUniqueElementList(nodes: INode[], uniqueElements: string[] = []) {\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        for (const node of nodes) {\n            if (uniqueElements.indexOf(node.name) < 0) {\n                uniqueElements.push(node.name);\n            }\n\n            // recursion\n            if (node.children && node.children.length > 0) {\n                this.generateUniqueElementList(node.children, uniqueElements);\n            }\n        }\n\n        return uniqueElements;\n    }\n\n    static getMaxModuleLevel(node: INode): number {\n        let depth = 0;\n        if (node.children) {\n            node.children.filter(child => child.type === NodeType.MODULE).forEach((childNode) => {\n                depth = Math.max(this.getMaxModuleLevel(childNode), depth);\n            });\n        }\n        return 1 + depth;\n    }\n\n    static findSmallestAndBiggestMetricValueByMetricName(nodes: INode[], metricName: string): {min: number, max: number} {\n        if (typeof nodes !== 'object' || nodes === null) {\n            throw new Error('elements is not an object or null!');\n        }\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        let min = Number.MAX_VALUE;\n        let max = Number.MIN_VALUE;\n\n        for (const node of nodes) {\n            // investigate only FILEs, because only files can have different sizes and colors\n            if (node.type === NodeType.FILE) {\n                const commit1Metrics = node.commit1Metrics || null;\n                const commit2Metrics = node.commit2Metrics || null;\n\n                const big = this.getMaxMetricValueByMetricName(commit1Metrics, commit2Metrics, metricName);\n                if (big > max) {\n                    max = big;\n                }\n\n                const small = this.getMinMetricValueByMetricName(commit1Metrics, commit2Metrics, metricName);\n                if (small < min) {\n                    min = small;\n                }\n            }\n\n            // recursion\n            if (node.children && node.children.length > 0) {\n                const result = this.findSmallestAndBiggestMetricValueByMetricName(node.children, metricName);\n                if (result.max > max) {\n                    max = result.max;\n                }\n                if (result.min < min) {\n                    min = result.min;\n                }\n            }\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    }\n\n    static getMinMetricValueByMetricName(commit1Metrics: any, commit2Metrics: any, metricName: string): number {\n        if (commit1Metrics === null && commit2Metrics === null) {\n            throw new Error(`No metric objects given`);\n        }\n\n        if (commit1Metrics === null) {\n            return commit2Metrics[metricName];\n        } else if (commit2Metrics === null) {\n            return commit1Metrics[metricName];\n        } else {\n            return commit1Metrics[metricName] < commit2Metrics[metricName] ? commit1Metrics[metricName] : commit2Metrics[metricName];\n        }\n    }\n\n    static getMaxMetricValueByMetricName(commit1Metrics: any, commit2Metrics: any, metricName: string): number {\n        if (commit1Metrics === null && commit2Metrics === null) {\n            throw new Error(`No metric objects given`);\n        }\n\n        if (commit1Metrics === null) {\n            return commit2Metrics[metricName];\n        } else if (commit2Metrics === null) {\n            return commit1Metrics[metricName];\n        } else {\n            return commit1Metrics[metricName] > commit2Metrics[metricName] ? commit1Metrics[metricName] : commit2Metrics[metricName];\n        }\n    }\n\n    static hasChildrenForCurrentCommit(node: INode, isFullScreen: boolean, screenType: ScreenType): boolean {\n        let found = false;\n\n        for (const child of node.children) {\n            if (this.hasMetricValuesForCurrentCommit(child, isFullScreen, screenType)) {\n                found = true;\n            }\n\n            // recursion\n            if (child.children && child.children.length > 0 && !found) {\n                found = this.hasChildrenForCurrentCommit(child, isFullScreen, screenType);\n            }\n        }\n\n        return found;\n    }\n\n    static hasMetricValuesForCurrentCommit(node: INode, isFullScreen: boolean, screenType: ScreenType) {\n        // when in fullScreen mode, metrics for at least one commit should be present\n        if (isFullScreen) {\n            return (node.commit1Metrics != null && Object.keys(node.commit1Metrics).length > 0)\n                || (node.commit2Metrics != null && Object.keys(node.commit2Metrics).length > 0)\n            ;\n        }\n\n        if (screenType === ScreenType.LEFT) {\n            return node.commit1Metrics != null && Object.keys(node.commit1Metrics).length > 0;\n        } else if (screenType === ScreenType.RIGHT) {\n            return node.commit2Metrics != null && Object.keys(node.commit2Metrics).length > 0;\n        } else {\n            throw new Error(`Unknown screenType ${screenType}!`);\n        }\n    }\n\n    static getMetricValueOfElementAndCommitReferenceType(\n        node: INode,\n        metricName: string,\n        commitReferenceType: CommitReferenceType,\n        screenType: ScreenType\n    ): number {\n        if (screenType === ScreenType.LEFT) {\n            if (commitReferenceType === CommitReferenceType.THIS) {\n                return node.commit1Metrics ? node.commit1Metrics[metricName] : undefined;\n            } else if (commitReferenceType === CommitReferenceType.OTHER) {\n                return node.commit2Metrics ? node.commit2Metrics[metricName] : undefined;\n            } else {\n                throw new Error(`Unknown commitReferenceType ${commitReferenceType}!`);\n            }\n\n        } else if (screenType === ScreenType.RIGHT) {\n            if (commitReferenceType === CommitReferenceType.THIS) {\n                return node.commit2Metrics ? node.commit2Metrics[metricName] : undefined;\n            } else if (commitReferenceType === CommitReferenceType.OTHER) {\n                return node.commit1Metrics ? node.commit1Metrics[metricName] : undefined;\n            } else {\n                throw new Error(`Unknown commitReferenceType ${commitReferenceType}!`);\n            }\n\n        } else {\n            throw new Error(`Unknown screenType ${screenType}!`);\n        }\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'keyValue',\n    pure: false\n})\nexport class KeyValuePipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        if (!value) {\n            return undefined;\n        }\n\n        const keys = [];\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                keys.push({key: key, value: value[key]});\n            }\n        }\n        return keys;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ICommitsGetResponse} from '../interfaces/ICommitsGetResponse';\nimport {Observable} from 'rxjs';\nimport {AppConfig} from '../AppConfig';\nimport {environment} from 'environments/environment';\n\n@Injectable()\nexport class CommitService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    loadCommits(): Observable<ICommitsGetResponse> {\n        if (environment.useCoderadarEndpoint) {\n            return this.http.get<ICommitsGetResponse>(`${AppConfig.BASE_URL}/projects/1/commits?page=0&size=999`);\n        } else {\n            return this.http.get<ICommitsGetResponse>('assets/json/commits.json');\n        }\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {INode} from 'app/interfaces/INode';\n\n@Injectable()\nexport class ComparisonPanelService {\n\n    private showComparisonPanelSource = new Subject<{elementName: string, foundElement: INode}>();\n    private hideComparisonPanelSource = new Subject();\n\n    showComparisonPanel$ = this.showComparisonPanelSource.asObservable();\n    hideComparisonPanel$ = this.hideComparisonPanelSource.asObservable();\n\n    constructor() {\n    }\n\n    hide() {\n        this.hideComparisonPanelSource.next();\n    }\n\n    show(params: {elementName: string, foundElement: INode}) {\n        this.showComparisonPanelSource.next(params);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n\n@Injectable()\nexport class FocusService {\n\n    private focusElementSource = new Subject<string>();\n\n    elementFocussed$ = this.focusElementSource.asObservable();\n\n    focusElement(elementName: string) {\n        this.focusElementSource.next(elementName);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IDeltaTreeGetResponse} from '../interfaces/IDeltaTreeGetResponse';\nimport {ICommit} from '../interfaces/ICommit';\nimport {INode} from '../interfaces/INode';\nimport {IMetricMapping} from '../interfaces/IMetricMapping';\nimport {AppConfig} from '../AppConfig';\nimport {delay, map} from 'rxjs/operators';\nimport { environment } from 'environments/environment';\nimport { IAvailableMetricsGetResponse } from '../interfaces/IAvailableMetricsGetResponse';\n\n@Injectable()\nexport class MetricService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    loadAvailableMetrics(): Observable<IAvailableMetricsGetResponse> {\n        if (environment.useCoderadarEndpoint) {\n            return this.http.get<IAvailableMetricsGetResponse>(`${AppConfig.BASE_URL}/projects/1/metrics`);\n        } else {\n            return this.http.get<IAvailableMetricsGetResponse>('assets/json/metrics.json');\n        }\n    }\n\n    loadDeltaTree(leftCommit: ICommit, rightCommit: ICommit, metricMapping: IMetricMapping): Observable<IDeltaTreeGetResponse> {\n        if (environment.useCoderadarEndpoint) {\n            const body = {\n                'commit1': leftCommit.name,\n                'commit2': rightCommit.name,\n                'metrics': [metricMapping.heightMetricName, metricMapping.groundAreaMetricName, metricMapping.colorMetricName]\n            };\n\n            return this.http.post<INode>(`${AppConfig.BASE_URL}/projects/1/metricvalues/deltaTree`, body)\n                .pipe(\n                    map((res) => {\n                        return {\n                            rootNode: res\n                        };\n                    })\n                );\n        } else {\n            const deltaTreeId = leftCommit.name.charAt(0);\n            return this.http.get<INode>(`assets/json/deltaTree${deltaTreeId}.json`)\n                .pipe(\n                    delay(1500),\n                    map((res) => {\n                        return {\n                            rootNode: res\n                        };\n                    })\n                );\n        }\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {ScreenType} from '../enum/ScreenType';\nimport {Store} from '@ngrx/store';\nimport * as fromRoot from '../shared/reducers';\nimport {addScreenshot, clearScreenshots} from '../control-panel/control-panel.actions';\n\n@Injectable()\nexport class ScreenShotService {\n\n    private screenShotRequestedSource = new Subject<string>();\n\n    screenShotRequested$ = this.screenShotRequestedSource.asObservable();\n\n    constructor(private store: Store<fromRoot.AppState>) {\n    }\n\n    requestScreenShot() {\n        this.screenShotRequestedSource.next();\n    }\n\n    addScreenShot(screenShot: {screenType: ScreenType, file: string}) {\n        this.store.dispatch(addScreenshot(screenShot));\n    }\n\n    clearScreenShots() {\n        this.store.dispatch(clearScreenshots());\n    }\n\n    getScreenShots() {\n        return this.store.select(fromRoot.getScreenshots);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n\n@Injectable()\nexport class TooltipService {\n\n    private tooltipSource = new Subject<{elementName: string, metrics: any}>();\n    private showTooltipSource = new Subject();\n    private hideTooltipSource = new Subject();\n    private trackPositionSource = new Subject<{x: number, y: number}>();\n\n    tooltipContent$ = this.tooltipSource.asObservable();\n    showTooltip$ = this.showTooltipSource.asObservable();\n    hideTooltip$ = this.hideTooltipSource.asObservable();\n    trackPosition$ = this.trackPositionSource.asObservable();\n\n    constructor() {\n    }\n\n    setContent(tooltipObject: {elementName: string, metrics: any}) {\n        this.tooltipSource.next(tooltipObject);\n    }\n\n    setMousePosition(position: {x: number, y: number}) {\n        this.trackPositionSource.next(position);\n    }\n\n    hide() {\n        this.hideTooltipSource.next();\n    }\n\n    show() {\n        this.showTooltipSource.next();\n    }\n\n}\n","export * from '../control-panel/control-panel.actions';\nexport * from '../control-panel/settings/settings.actions';\nexport * from '../visualization/visualization.actions';\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect} from '@ngrx/effects';\nimport {of} from 'rxjs';\nimport * as actions from '../shared/actions';\nimport {CommitService} from '../service/commit.service';\nimport {ICommitsGetResponse} from '../interfaces/ICommitsGetResponse';\nimport {ICommitsGetErrorResponse} from '../interfaces/ICommitsGetErrorResponse';\nimport {IDeltaTreeGetErrorResponse} from '../interfaces/IDeltaTreeGetErrorResponse';\nimport {IDeltaTreeGetResponse} from '../interfaces/IDeltaTreeGetResponse';\nimport {MetricService} from '../service/metric.service';\nimport {catchError, map, switchMap, mergeMap} from 'rxjs/operators';\nimport { IActionWithPayload } from '../interfaces/IActionWithPayload';\nimport { IAvailableMetricsGetResponse } from '../interfaces/IAvailableMetricsGetResponse';\nimport { IAvailableMetricsGetErrorResponse } from '../interfaces/IAvailableMetricsGetErrorResponse';\nimport { IMetric } from '../interfaces/IMetric';\nimport { AppConfig } from '../AppConfig';\n\n@Injectable()\nexport class AppEffects {\n\n    @Effect() loadCommitsEffects$ = this.actions$\n        .ofType(actions.LOAD_COMMITS)\n        .pipe(\n            switchMap(\n                () => this.commitService.loadCommits()\n                    .pipe(\n                        map((result: ICommitsGetResponse) => {\n                            return actions.loadCommitsSuccess(result._embedded.commitResourceList);\n                        }),\n                        catchError((response: ICommitsGetErrorResponse) => {\n                            return of(actions.loadCommitsError(response.error));\n                        })\n                    )\n            )\n        );\n\n    @Effect() loadAvailableMetricsEffects$ = this.actions$\n        .ofType(actions.LOAD_AVAILABLE_METRICS)\n        .pipe(\n            switchMap(\n                () => this.metricService.loadAvailableMetrics()\n                    .pipe(\n                        mergeMap((result: IAvailableMetricsGetResponse) => {\n                            const availableMetrics = result._embedded.metricResourceList.map(\n                                metric => AppConfig.getShortNameByMetricName(metric.metricName)\n                            );\n                            // TODO: Error handling when less than three metrics are available\n                            return [\n                                actions.loadAvailableMetricsSuccess(availableMetrics),\n                                actions.setMetricMapping({\n                                    heightMetricName: availableMetrics[0].metricName,\n                                    groundAreaMetricName: availableMetrics[1].metricName,\n                                    colorMetricName: availableMetrics[2].metricName\n                                })\n                            ];\n                        }),\n                        catchError((response: IAvailableMetricsGetErrorResponse) => {\n                            return of(actions.loadAvailableMetricsError(response.error));\n                        })\n                    )\n            )\n        );\n\n    @Effect() loadMetricTreeEffects$ = this.actions$\n        .ofType(actions.LOAD_METRIC_TREE)\n        .pipe(\n            map((action) => action.payload),\n            switchMap(\n                (payload) => this.metricService.loadDeltaTree(payload.leftCommit, payload.rightCommit, payload.metricMapping)\n                    .pipe(\n                        mergeMap((result: IDeltaTreeGetResponse) => {\n                            return [\n                                actions.loadMetricTreeSuccess(result.rootNode),\n                                actions.generateUniqueFileList(result.rootNode)\n                            ];\n                        }),\n                        catchError((response: IDeltaTreeGetErrorResponse) => {\n                            return of(actions.loadMetricTreeError(response.error));\n                        })\n                    )\n            )\n        );\n\n    constructor(\n        private actions$: Actions<IActionWithPayload<any>>,\n        private commitService: CommitService,\n        private metricService: MetricService\n    ) { }\n}\n","import {createSelector} from 'reselect';\nimport {ActionReducerMap} from '@ngrx/store';\nimport * as fromControlPanel from '../control-panel/control-panel.reducers';\nimport * as fromSettings from '../control-panel/settings/settings.reducers';\nimport * as fromVisualization from '../visualization/visualization.reducers';\nimport { InjectionToken } from '@angular/core';\n\nexport interface AppState {\n    controlPanelState: fromControlPanel.ControlPanelState;\n    settingsState: fromSettings.SettingsState;\n    visualizationState: fromVisualization.VisualizationState;\n}\n\nexport const REDUCER_TOKEN = new InjectionToken<ActionReducerMap<AppState>>('Registered Reducers');\n\nexport function getReducers() {\n    return {\n        controlPanelState: fromControlPanel.ControlPanelReducer,\n        settingsState: fromSettings.SettingsReducer,\n        visualizationState: fromVisualization.VisualizationReducer\n    };\n}\n\nexport const getControlPanelState = (state: AppState) => state.controlPanelState;\n\nexport const getVisualizationState = (state: AppState) => state.visualizationState;\n\nexport const getSettingsState = (state: AppState) => state.settingsState;\n\nexport const getCommitsLoading = createSelector(getControlPanelState, fromControlPanel.getCommitsLoading);\n\nexport const getCommits = createSelector(getControlPanelState, fromControlPanel.getCommits);\n\nexport const getLeftCommit = createSelector(getControlPanelState, fromControlPanel.getLeftCommit);\n\nexport const getRightCommit = createSelector(getControlPanelState, fromControlPanel.getRightCommit);\n\nexport const getScreenshots = createSelector(getControlPanelState, fromControlPanel.getScreenshots);\n\nexport const getMetricsLoading = createSelector(getVisualizationState, fromVisualization.getMetricsLoading);\n\nexport const getMetricTree = createSelector(getVisualizationState, fromVisualization.getMetricTree);\n\nexport const getUniqueFileList = createSelector(getVisualizationState, fromVisualization.getUniqueFileList);\n\nexport const getAvailableMetrics = createSelector(getVisualizationState, fromVisualization.getAvailableMetrics);\n\nexport const getMetricMapping = createSelector(getSettingsState, fromSettings.getMetricMapping);\n\nexport const getActiveFilter = createSelector(getSettingsState, fromSettings.getActiveFilter);\n\nexport const getActiveViewType = createSelector(getSettingsState, fromSettings.getActiveViewType);\n","module.exports = \"<div id=\\\"comparison-panel\\\">\\n    <strong title=\\\"{{elementName}}\\\" class=\\\"element-name\\\">{{elementName}}</strong>\\n    <div class=\\\"table-container\\\">\\n        <table id=\\\"comparison-table\\\" class=\\\"table table-striped table-sm\\\">\\n            <thead>\\n            <tr>\\n                <th>Metrik</th>\\n                <th id=\\\"first-commit-id\\\">{{leftCommit?.name}}</th>\\n                <th id=\\\"second-commit-id\\\">{{rightCommit?.name}}</th>\\n                <th>Änderung</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let row of tableRows\\\">\\n                    <td>{{row.metricName}}</td>\\n                    <td>{{row.leftCommitValue}}</td>\\n                    <td>{{row.rightCommitValue}}</td>\\n                    <td>\\n                        <fa-icon *ngIf=\\\"row.difference > 0\\\" [icon]=\\\"faCaretUp\\\"></fa-icon>\\n                        <fa-icon *ngIf=\\\"row.difference < 0\\\" [icon]=\\\"faCaretDown\\\"></fa-icon>\\n                        <fa-icon *ngIf=\\\"row.difference === 0\\\" [icon]=\\\"faCaretRight\\\"></fa-icon>\\n                        {{row.difference}}\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"handleClose()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\"","module.exports = \"#comparison-panel {\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  -webkit-transform: translate3d(-50%, 100%, 0) scale(0.1);\\n          transform: translate3d(-50%, 100%, 0) scale(0.1);\\n  padding: 5px 20px;\\n  max-width: 40%;\\n  height: 190px;\\n  background: #fff;\\n  box-shadow: rgba(0, 0, 0, 0.2) 0 2px 6px 0;\\n  z-index: 100;\\n  transition: -webkit-transform 1.5s ease;\\n  transition: transform 1.5s ease;\\n  transition: transform 1.5s ease, -webkit-transform 1.5s ease; }\\n  #comparison-panel.open {\\n    -webkit-transform: translate3d(-50%, 0%, 0) scale(1);\\n            transform: translate3d(-50%, 0%, 0) scale(1); }\\n  #comparison-panel > .element-name {\\n    display: block;\\n    text-overflow: ellipsis;\\n    text-align: center;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    direction: rtl;\\n    margin: 10px auto;\\n    padding: 0 10px; }\\n  #comparison-panel table #first-commit-id, #comparison-panel table #second-commit-id {\\n    max-width: 100px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n  #comparison-panel button.close {\\n    position: absolute;\\n    top: 12px;\\n    right: 12px; }\\n\"","import {Component, Input, OnInit, OnDestroy} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport * as fromRoot from '../../shared/reducers';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ICommit} from '../../interfaces/ICommit';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\nimport {INode} from '../../interfaces/INode';\nimport {faCaretDown, faCaretUp, faCaretRight} from '@fortawesome/free-solid-svg-icons';\nimport {ComparisonPanelService} from '../../service/comparison-panel.service';\nimport { AppConfig } from '../../AppConfig';\n\n@Component({\n    selector: 'app-comparison-panel',\n    templateUrl: './comparison-panel.component.html',\n    styleUrls: ['./comparison-panel.component.scss']\n})\nexport class ComparisonPanelComponent implements OnInit, OnDestroy {\n\n    faCaretDown = faCaretDown;\n    faCaretUp = faCaretUp;\n    faCaretRight = faCaretRight;\n\n    @Input() metricMapping: IMetricMapping;\n    @Input() leftCommit: ICommit;\n    @Input() rightCommit: ICommit;\n\n    comparisonPanel: HTMLElement;\n\n    subscriptions: Subscription[] = [];\n\n    tableRows: any[] = [];\n\n    elementName: string;\n\n    constructor(\n        private store: Store<fromRoot.AppState>,\n        private comparisonPanelService: ComparisonPanelService) {\n    }\n\n    ngOnInit() {\n        this.comparisonPanel = <HTMLElement>document.querySelector('#comparison-panel');\n\n        this.subscriptions.push(\n            this.comparisonPanelService.showComparisonPanel$.subscribe((params) => {\n                this.elementName = params.elementName;\n                this.prepareTableData(params.foundElement);\n                this.show();\n            })\n        );\n\n        this.subscriptions.push(\n            this.comparisonPanelService.hideComparisonPanel$.subscribe(() => {\n                this.hide();\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    handleClose() {\n        this.hide();\n    }\n\n    prepareTableData(foundElement: INode) {\n        const rows = [];\n        for (const key of Object.keys(this.metricMapping)) {\n            const metricName = this.metricMapping[key];\n\n            let leftCommitValue;\n            if (foundElement.commit1Metrics && foundElement.commit1Metrics[metricName]) {\n                leftCommitValue = foundElement.commit1Metrics[metricName];\n            }\n\n            let rightCommitValue;\n            if (foundElement.commit2Metrics && foundElement.commit2Metrics[metricName]) {\n                rightCommitValue = foundElement.commit2Metrics[metricName];\n            }\n\n            let difference = 0;\n            if (leftCommitValue && rightCommitValue) {\n                difference = rightCommitValue - leftCommitValue;\n            }\n\n            rows.push({\n                metricName: AppConfig.getShortNameByMetricName(metricName).shortName,\n                leftCommitValue: leftCommitValue || 'N/A',\n                rightCommitValue: rightCommitValue || 'N/A',\n                difference: difference\n            });\n        }\n        this.tableRows = rows;\n    }\n\n    show() {\n        this.comparisonPanel.classList.add('open');\n    }\n\n    hide() {\n        this.comparisonPanel.classList.remove('open');\n    }\n\n}\n","import {Scene, WebGLRenderer, Raycaster, Vector2, PerspectiveCamera, Intersection, Object3D} from 'three';\nimport {ScreenType} from '../../enum/ScreenType';\nimport {FocusService} from '../../service/focus.service';\nimport {TooltipService} from '../../service/tooltip.service';\n\nexport class InteractionHandler {\n\n    enabled = false;\n\n    raycaster: Raycaster = new Raycaster();\n    mouse: Vector2 = new Vector2();\n    mouseForRaycaster: Vector2 = new Vector2();\n\n    hoveredElementUuid = undefined;\n    clickedElementUuid = undefined;\n\n    startingPosition: {x?: number, y?: number} = {};\n\n    constructor(\n        private scene: Scene,\n        private renderer: WebGLRenderer,\n        private screenType: ScreenType,\n        private isMergedView: boolean,\n        private focusService: FocusService,\n        private tooltipService: TooltipService\n    ) {\n        this.bindEvents();\n    }\n\n    setIsMergedView(isMergedView: boolean) {\n        this.isMergedView = isMergedView;\n    }\n\n    update(camera: PerspectiveCamera) {\n        if (!this.enabled) {\n            return;\n        }\n\n        this.raycaster.setFromCamera(this.mouseForRaycaster, camera);\n        const intersects = this.raycaster.intersectObjects(this.scene.children);\n        const target = this.findFirstNonHelperBlock(intersects);\n\n        this.updateTooltip(target);\n    }\n\n    private findFirstNonHelperBlock(intersections: Intersection[]): Object3D {\n        if (intersections.length > 0) {\n            for (let i = 0; i < intersections.length; i++) {\n                // find the first block that is not a helper block\n                // this lets the clicks go through the helper blocks\n                if (!intersections[i].object.userData.isHelper) {\n                    return intersections[i].object;\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    updateTooltip(target: Object3D) {\n        if (target) {\n            if (target.uuid !== this.hoveredElementUuid) {\n                this.tooltipService.setContent({\n                    elementName: target.userData.elementName,\n                    metrics: target.userData.metrics\n                });\n                this.hoveredElementUuid = target.uuid;\n            }\n\n            this.tooltipService.show();\n            this.tooltipService.setMousePosition({x: this.mouse.x, y: this.mouse.y});\n        } else {\n            this.tooltipService.hide();\n        }\n    }\n\n    onDocumentMouseOver() {\n        this.enabled = true;\n    }\n\n    onDocumentMouseOut() {\n        this.enabled = false;\n        this.tooltipService.hide();\n    }\n\n    onDocumentMouseMove(event) {\n        if (!this.enabled) {\n            return;\n        }\n\n        this.mouse.x = event.clientX;\n        this.mouse.y = event.clientY;\n\n        const screenOffset = this.screenType === ScreenType.LEFT ? 0 : this.getScreenWidth();\n\n        this.mouseForRaycaster.x = ((event.clientX - screenOffset) / this.getScreenWidth()) * 2 - 1;\n        this.mouseForRaycaster.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    }\n\n    onDocumentMouseDown(event) {\n        this.renderer.domElement.style.cursor = '-webkit-grabbing';\n\n        this.startingPosition = {\n            x: event.clientX,\n            y: event.clientY\n        };\n    }\n\n    onDocumentMouseUp(event) {\n        this.renderer.domElement.style.cursor = '-webkit-grab';\n\n        if (!this.enabled) {\n            return;\n        }\n\n        if (Math.abs(event.clientX - this.startingPosition.x) > 0 || Math.abs(event.clientY - this.startingPosition.y) > 0) {\n            return;\n        }\n\n        const intersects = this.raycaster.intersectObjects(this.scene.children);\n        const target = this.findFirstNonHelperBlock(intersects);\n        if (target) {\n            if (event.which === 1) { // left mouse button\n                if (target.uuid !== this.clickedElementUuid) {\n                    this.clickedElementUuid = target.uuid;\n                } else {\n                    this.clickedElementUuid = undefined;\n                }\n\n                this.focusService.focusElement(target.name);\n            }\n        }\n    }\n\n    private bindEvents() {\n        this.renderer.domElement.addEventListener('mouseover', this.onDocumentMouseOver.bind(this), false);\n        this.renderer.domElement.addEventListener('mouseout', this.onDocumentMouseOut.bind(this), false);\n        this.renderer.domElement.addEventListener('mousemove', this.onDocumentMouseMove.bind(this), false);\n        this.renderer.domElement.addEventListener('mousedown', this.onDocumentMouseDown.bind(this), false);\n        this.renderer.domElement.addEventListener('mouseup', this.onDocumentMouseUp.bind(this), false);\n    }\n\n    private getScreenWidth() {\n        if (this.isMergedView) {\n            return window.innerWidth;\n        }\n        return window.innerWidth / 2;\n    }\n\n}\n","module.exports = \"<div id=\\\"legend-container\\\">\\n    <div class=\\\"legend-item\\\">\\n        <span class=\\\"legend-icon\\\">\\n            <fa-icon [icon]=\\\"faArrowsAltV\\\"></fa-icon>\\n        </span>\\n        <small class=\\\"legend-label\\\">{{heightMetric?.shortName}}</small>\\n    </div>\\n    <div class=\\\"legend-item\\\">\\n        <span class=\\\"legend-icon\\\">\\n            <fa-icon [icon]=\\\"faArrowsAlt\\\"></fa-icon>\\n        </span>\\n        <small class=\\\"legend-label\\\">{{groundAreaMetric?.shortName}}</small>\\n    </div>\\n    <div class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.split\\\">\\n            <span class=\\\"legend-icon\\\">\\n                    <fa-icon [icon]=\\\"faPalette\\\"></fa-icon>\\n                </span>\\n        <small class=\\\"legend-label\\\">{{colorMetric?.shortName}}</small>\\n    </div>\\n    <div id=\\\"legend-item-commit-1\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorFirstCommit}\\\"></span>\\n        <small class=\\\"legend-label\\\">Erste Revision</small>\\n    </div>\\n    <div id=\\\"legend-item-commit-2\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorSecondCommit}\\\"></span>\\n        <small class=\\\"legend-label\\\">Zweite Revision</small>\\n    </div>\\n    <div id=\\\"legend-item-added-files\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorAddedFile}\\\"></span>\\n        <small class=\\\"legend-label\\\">hinzugefügt</small>\\n    </div>\\n    <div id=\\\"legend-item-deleted-files\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorDeletedFile}\\\"></span>\\n        <small class=\\\"legend-label\\\">gelöscht</small>\\n    </div>\\n    <div id=\\\"legend-item-unchanged-files\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorUnchangedFile}\\\"></span>\\n        <small class=\\\"legend-label\\\">unverändert</small>\\n    </div>\\n</div>\"","module.exports = \"#legend-container {\\n  position: absolute;\\n  bottom: 0;\\n  left: 10px;\\n  background: #fff;\\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.2);\\n  z-index: 99; }\\n  #legend-container .legend-item {\\n    display: inline-block;\\n    padding: 3px 10px; }\\n  #legend-container .legend-item .legend-color {\\n      display: inline-block;\\n      width: 10px;\\n      height: 10px; }\\n  #legend-container .legend-item .legend-color, #legend-container .legend-item .legend-icon {\\n      margin-right: 5px; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ViewType} from '../../enum/ViewType';\nimport {AppConfig} from '../../AppConfig';\nimport { IMetric } from '../../interfaces/IMetric';\nimport {faArrowsAltV, faArrowsAlt, faPalette} from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\nimport * as fromRoot from '../../shared/reducers';\nimport { IMetricMapping } from '../../interfaces/IMetricMapping';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-legend',\n    templateUrl: './legend.component.html',\n    styleUrls: ['./legend.component.scss']\n})\nexport class LegendComponent implements OnInit {\n\n    @Input() activeViewType: ViewType;\n    \n    metricMapping$: Observable<IMetricMapping>;\n    heightMetric: IMetric;\n    groundAreaMetric: IMetric;\n    colorMetric: IMetric;\n\n    faArrowsAltV = faArrowsAltV;\n    faArrowsAlt = faArrowsAlt;\n    faPalette = faPalette;\n\n    colorFirstCommit: string;\n    colorSecondCommit: string;\n    colorAddedFile: string;\n    colorDeletedFile: string;\n    colorUnchangedFile: string;\n\n    viewTypes: any = {\n        split: ViewType.SPLIT,\n        merged: ViewType.MERGED\n    };\n\n    legendItemCommit1: HTMLElement;\n    legendItemCommit2: HTMLElement;\n    legendItemColorCode: HTMLElement;\n    legendItemAddedFiles: HTMLElement;\n    legendItemDeletedFiles: HTMLElement;\n    legendItemUnchangedFiles: HTMLElement;\n\n    constructor(private store: Store<fromRoot.AppState>) {\n    }\n\n    ngOnInit() {\n        this.metricMapping$ = this.store.select(fromRoot.getMetricMapping);\n        this.metricMapping$.subscribe(metricMapping => {\n            this.heightMetric = AppConfig.getShortNameByMetricName(metricMapping.heightMetricName);\n            this.groundAreaMetric = AppConfig.getShortNameByMetricName(metricMapping.groundAreaMetricName);\n            this.colorMetric = AppConfig.getShortNameByMetricName(metricMapping.colorMetricName);\n        });\n\n        this.colorFirstCommit = AppConfig.COLOR_FIRST_COMMIT;\n        this.colorSecondCommit = AppConfig.COLOR_SECOND_COMMIT;\n        this.colorAddedFile = AppConfig.COLOR_ADDED_FILE;\n        this.colorDeletedFile = AppConfig.COLOR_DELETED_FILE;\n        this.colorUnchangedFile = AppConfig.COLOR_UNCHANGED_FILE;\n\n        this.legendItemCommit1 = <HTMLElement>document.querySelector('#legend-item-commit-1');\n        this.legendItemCommit2 = <HTMLElement>document.querySelector('#legend-item-commit-2');\n        this.legendItemColorCode = <HTMLElement>document.querySelector('#legend-item-color-code');\n        this.legendItemAddedFiles = <HTMLElement>document.querySelector('#legend-item-added-files');\n        this.legendItemDeletedFiles = <HTMLElement>document.querySelector('#legend-item-deleted-files');\n        this.legendItemUnchangedFiles = <HTMLElement>document.querySelector('#legend-item-unchanged-files');\n    }\n}\n","module.exports = \"<div class=\\\"loading-indicator-container\\\">\\n    <div class=\\\"uil-cube-css\\\">\\n        <div></div>\\n        <div></div>\\n        <div></div>\\n        <div></div>\\n    </div>\\n</div>\"","module.exports = \".loading-indicator-container {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.7);\\n  top: 80px;\\n  left: 0;\\n  z-index: 1000; }\\n  .loading-indicator-container .uil-cube-css {\\n    background: none;\\n    position: absolute;\\n    width: 200px;\\n    height: 200px;\\n    -webkit-transform: translateX(-50%) scale(0.5);\\n    top: calc(50% - 130px);\\n    left: 50%; }\\n  .loading-indicator-container .uil-cube-css > div {\\n      position: absolute;\\n      width: 80px;\\n      height: 80px;\\n      -webkit-animation: uil-cube-css 1s cubic-bezier(0.2, 0.8, 0.2, 0.8) infinite;\\n      animation: uil-cube-css 1s cubic-bezier(0.2, 0.8, 0.2, 0.8) infinite; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(1) {\\n      top: 10px;\\n      left: 10px;\\n      background: #fff;\\n      opacity: 0.9;\\n      -webkit-animation-delay: 0s;\\n      animation-delay: 0s; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(2) {\\n      top: 10px;\\n      left: 110px;\\n      background: #fff;\\n      opacity: 0.8;\\n      -webkit-animation-delay: 0.1s;\\n      animation-delay: 0.1s; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(3) {\\n      top: 110px;\\n      left: 10px;\\n      background: #fff;\\n      opacity: 0.7;\\n      -webkit-animation-delay: 0.3s;\\n      animation-delay: 0.3s; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(4) {\\n      top: 110px;\\n      left: 110px;\\n      background: #fff;\\n      opacity: 0.6;\\n      -webkit-animation-delay: 0.2s;\\n      animation-delay: 0.2s; }\\n  @-webkit-keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n  @-webkit-keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n  @-webkit-keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n  @keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-loading-indicator',\n    templateUrl: './loading-indicator.component.html',\n    styleUrls: ['./loading-indicator.component.scss']\n})\nexport class LoadingIndicatorComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import {Component, Input, OnChanges, OnInit, SimpleChanges, OnDestroy} from '@angular/core';\nimport {ScreenType} from '../../enum/ScreenType';\nimport {WebGLRenderer, Scene, AmbientLight, DirectionalLight} from 'three';\nimport {Subscription} from 'rxjs';\nimport {ViewType} from '../../enum/ViewType';\nimport {AbstractView} from '../view/abstract-view';\nimport {SplitView} from '../view/split-view';\nimport {MergedView} from '../view/merged-view';\nimport {BlockConnection} from '../../geometry/block-connection';\nimport {IFilter} from '../../interfaces/IFilter';\nimport {NodeType} from '../../enum/NodeType';\nimport {InteractionHandler} from '../interaction-handler/interaction-handler';\nimport {AppConfig} from '../../AppConfig';\nimport {INode} from '../../interfaces/INode';\nimport {ScreenShotService} from '../../service/screenshot.service';\nimport {FocusService} from '../../service/focus.service';\nimport {TooltipService} from '../../service/tooltip.service';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\nimport {ComparisonPanelService} from '../../service/comparison-panel.service';\nimport {ElementAnalyzer} from 'app/helper/element-analyzer';\ndeclare var TWEEN: any;\ndeclare var THREE: any;\n\n@Component({\n    selector: 'app-screen',\n    templateUrl: './screen.component.html',\n    styleUrls: ['./screen.component.scss']\n})\nexport class ScreenComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() screenType: ScreenType;\n    @Input() activeViewType: ViewType;\n    @Input() activeFilter: IFilter;\n    @Input() metricTree: INode;\n    @Input() metricMapping: IMetricMapping;\n\n    subscriptions: Subscription[] = [];\n\n    private isMergedView = false;\n    private requestAnimationFrameId: number;\n    private renderingIsPaused = false;\n\n    renderer: WebGLRenderer;\n    scene: Scene = new Scene();\n\n    // use THREE.PerspectiveCamera instead of importing PerspectiveCamera to avoid warning for panning and zooming are disabled\n    // (see https://github.com/nicolaspanel/three-orbitcontrols-ts/issues/1)\n    camera: THREE.PerspectiveCamera;\n    controls: THREE.OrbitControls;\n\n    interactionHandler: InteractionHandler;\n\n    view: AbstractView;\n\n    constructor(\n        private screenShotService: ScreenShotService,\n        private focusService: FocusService,\n        private tooltipService: TooltipService,\n        private comparisonPanelService: ComparisonPanelService\n    ) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.activeViewType !== null && this.metricTree !== null && this.activeFilter !== null) {\n            this.isMergedView = this.activeViewType === ViewType.MERGED;\n            this.interactionHandler.setIsMergedView(this.isMergedView);\n\n            if (this.isMergedView) {\n                this.view = new MergedView(this.screenType, this.metricMapping);\n                if (this.screenType === ScreenType.RIGHT) {\n                    this.pauseRendering();\n                }\n                document.querySelector('#stage').classList.remove('split');\n\n            } else {\n                this.view = new SplitView(this.screenType, this.metricMapping);\n                if (this.screenType === ScreenType.RIGHT) {\n                    this.resumeRendering();\n                }\n                document.querySelector('#stage').classList.add('split');\n            }\n\n            this.resetScene();\n            this.prepareView(this.metricTree);\n            this.applyFilter(this.activeFilter);\n            this.handleViewChanged();\n        }\n\n        if (\n            changes.metricTree\n            && changes.metricTree.currentValue\n            && ElementAnalyzer.hasMetricValuesForCurrentCommit(\n                changes.metricTree.currentValue,\n                this.activeViewType === ViewType.MERGED,\n                this.screenType\n            )\n        ) {\n            this.resetCamera();\n            this.resetControls();\n        }\n    }\n\n    ngOnInit() {\n        this.view = new SplitView(this.screenType, this.metricMapping);\n\n        this.createCamera();\n        this.createControls();\n        this.createLight();\n        this.createRenderer();\n        this.createInteractionHandler();\n\n        this.initializeEventListeners();\n\n        this.render();\n\n        this.subscriptions.push(\n            this.focusService.elementFocussed$.subscribe((elementName) => {\n                this.focusElementByName(elementName);\n                this.comparisonPanelService.show({\n                    elementName: elementName,\n                    foundElement: ElementAnalyzer.findElementByName(this.metricTree, elementName)\n                });\n            })\n        );\n\n        this.subscriptions.push(\n            this.screenShotService.screenShotRequested$.subscribe(() => {\n                const imgFromCanvas = this.renderer.domElement.toDataURL('image/png');\n                const pngFile = imgFromCanvas.replace(/^data:image\\/png/, 'data:application/octet-stream');\n                this.screenShotService.addScreenShot({\n                    screenType: this.screenType,\n                    file: pngFile\n                });\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    createRenderer() {\n        this.renderer = new WebGLRenderer({antialias: true, preserveDrawingBuffer: true});\n        this.renderer.setClearColor(0xf0f0f0);\n        this.renderer.setSize(this.getScreenWidth() - 0, window.innerHeight);\n\n        document.querySelector('#stage').appendChild(this.renderer.domElement);\n    }\n\n    updateRenderer() {\n        this.renderer.setSize(this.getScreenWidth() - 0, window.innerHeight);\n    }\n\n    createLight() {\n        const ambientLight = new AmbientLight(0xcccccc, 0.5);\n        this.scene.add(ambientLight);\n\n        const directionalLight = new DirectionalLight(0xffffff, 0.4);\n        directionalLight.position.set(0, 1, 0);\n        this.scene.add(directionalLight);\n    }\n\n    createCamera() {\n        this.camera = new THREE.PerspectiveCamera(\n            45,\n            (this.getScreenWidth() - 0) / window.innerHeight,\n            AppConfig.CAMERA_NEAR,\n            AppConfig.CAMERA_FAR\n        );\n        this.scene.add(this.camera);\n    }\n\n    updateCamera() {\n        this.camera.aspect = (this.getScreenWidth() - 0) / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n    }\n\n    resetCamera() {\n        const root = this.scene.getObjectByName('root');\n        // pythagoras\n        const diagonal = Math.sqrt(Math.pow(root.scale.x, 2) + Math.pow(root.scale.z, 2));\n        this.camera.position.x = root.scale.x * 2;\n        this.camera.position.y = diagonal * 1.5;\n        this.camera.position.z = root.scale.z * 2;\n    }\n\n    createControls() {\n        this.controls = new THREE.OrbitControls(this.camera, <HTMLElement>document.querySelector('#stage'));\n    }\n\n    resetControls() {\n        const centralCoordinates = this.getCentralCoordinates();\n        this.controls.target.x = centralCoordinates.x;\n        this.controls.target.y = centralCoordinates.y;\n        this.controls.target.z = centralCoordinates.z;\n    }\n\n    render() {\n        this.requestAnimationFrameId = requestAnimationFrame(() => {\n            this.render();\n        });\n\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n        this.interactionHandler.update(this.camera);\n        TWEEN.update();\n    }\n\n    pauseRendering() {\n        if (this.requestAnimationFrameId) {\n            cancelAnimationFrame(this.requestAnimationFrameId);\n            this.resetScene();\n            this.renderingIsPaused = true;\n        }\n    }\n\n    resumeRendering() {\n        if (this.renderingIsPaused) {\n            this.render();\n            this.renderingIsPaused = false;\n        }\n    }\n\n    prepareView(metricTree) {\n        if (metricTree.children.length === 0) {\n            return;\n        }\n        this.view.setMetricTree(metricTree);\n        this.view.recalculate();\n        this.view.getBlockElements().forEach((element) => {\n            this.scene.add(element);\n        });\n\n        if (this.view instanceof MergedView) {\n            this.view.calculateConnections(this.scene);\n            this.view.getConnections().forEach((blockConnection: BlockConnection) => {\n                this.scene.add(blockConnection.getCurve());\n            });\n        }\n    }\n\n    createInteractionHandler() {\n        this.interactionHandler = new InteractionHandler(\n            this.scene,\n            this.renderer,\n            this.screenType,\n            this.isMergedView,\n            this.focusService,\n            this.tooltipService\n        );\n    }\n\n    resetScene() {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            const child = this.scene.children[i];\n\n            // only remove Blocks and Lines. Don't remove lights, cameras etc.\n            if (child.type === 'Mesh' || child.type === 'Line') {\n                this.scene.remove(child);\n            }\n        }\n    }\n\n    focusElementByName(elementName) {\n        const element = this.scene.getObjectByName(elementName);\n        if (!element) {\n            return;\n        }\n\n        const root = this.scene.getObjectByName('root');\n        // pythagoras\n        const diagonal = Math.sqrt(Math.pow(root.scale.x, 2) + Math.pow(root.scale.z, 2));\n\n        new TWEEN.Tween(this.camera.position)\n            .to({\n                x: element.position.x + root.scale.x / 5,\n                y: element.position.y + diagonal / 5,\n                z: element.position.z + root.scale.z / 5\n            }, AppConfig.CAMERA_ANIMATION_DURATION)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start();\n\n        new TWEEN.Tween(this.controls.target)\n            .to({\n                x: element.position.x + element.scale.x / 2,\n                y: element.position.y,\n                z: element.position.z + element.scale.z / 2\n            }, AppConfig.CAMERA_ANIMATION_DURATION)\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\n            .start();\n    }\n\n    private getCentralCoordinates() {\n        const root = this.scene.getObjectByName('root');\n        if (!root) {\n            console.warn(`no root found in screen #${this.screenType}`);\n            return;\n        }\n\n        return {\n            x: root.scale.x / 2,\n            y: 0,\n            z: root.scale.z / 2\n        };\n    }\n\n    private getScreenWidth() {\n        if (this.isMergedView) {\n            return window.innerWidth;\n        }\n        return window.innerWidth / 2;\n    }\n\n    private initializeEventListeners() {\n        window.addEventListener('resize', this.handleViewChanged.bind(this), false);\n    }\n\n    private handleViewChanged() {\n        this.updateCamera();\n        this.updateRenderer();\n    }\n\n    private applyFilter(activeFilter: IFilter) {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            const node = this.scene.children[i];\n            if (node.userData && (node.userData.type === NodeType.FILE || node.userData.type === NodeType.CONNECTION)) {\n                node.visible = true;\n\n                if (\n                    activeFilter.unmodified === false\n                    && node.userData.changeTypes\n                    && node.userData.changeTypes.modified === false\n                    && node.userData.changeTypes.deleted === false\n                    && node.userData.changeTypes.added === false\n                    && node.userData.changeTypes.renamed === false\n                ) {\n                    node.visible = false;\n                }\n\n                if (activeFilter.modified === false && node.userData.changeTypes && node.userData.changeTypes.modified === true) {\n                    node.visible = false;\n                }\n\n                if (activeFilter.deleted === false && node.userData.changeTypes && node.userData.changeTypes.deleted === true) {\n                    node.visible = false;\n                }\n\n                if (activeFilter.added === false && node.userData.changeTypes && node.userData.changeTypes.added === true) {\n                    node.visible = false;\n                }\n\n                if (activeFilter.renamed === false && node.userData.changeTypes && node.userData.changeTypes.renamed === true) {\n                    node.visible = false;\n                }\n            }\n        }\n    }\n}\n","module.exports = \"<div id=\\\"tooltip\\\">\\n    <div class=\\\"element-name\\\">{{(content$ | async)?.elementName}}</div>\\n    <table>\\n        <tr *ngFor=\\\"let metric of (content$ | async)?.metrics | keyValue\\\">\\n            <td class=\\\"metric-name-column\\\"><small>{{metric.key}}</small></td>\\n            <td class=\\\"metric-value-column\\\"><small>{{metric.value || 'N/A'}}</small></td>\\n        </tr>\\n    </table>\\n</div>\"","module.exports = \"#tooltip {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background-color: #2B222A;\\n  color: #fff;\\n  padding: 10px;\\n  font-size: 14px;\\n  max-width: 300px;\\n  z-index: 101;\\n  opacity: 0;\\n  transition: opacity 0.75s ease; }\\n  #tooltip.visible {\\n    opacity: 1; }\\n  #tooltip > .element-name {\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    direction: rtl;\\n    padding-bottom: 5px; }\\n  #tooltip table {\\n    width: 100%; }\\n  #tooltip table td.metric-value-column {\\n      padding-left: 5px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TooltipService} from '../../service/tooltip.service';\nimport {Observable} from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { AppConfig } from '../../AppConfig';\n\n@Component({\n    selector: 'app-tooltip',\n    templateUrl: './tooltip.component.html',\n    styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipComponent implements OnInit {\n\n    tooltipElement: HTMLElement;\n\n    content$: Observable<{elementName: string, metrics: any}>;\n\n    constructor(private tooltipService: TooltipService) {\n    }\n\n    ngOnInit() {\n        this.tooltipElement = <HTMLElement>document.querySelector('#tooltip');\n\n        this.content$ = this.tooltipService.tooltipContent$\n            .pipe(\n                map((tooltipObject) => {\n                    const readableMetrics = {};\n\n                    if (tooltipObject.metrics) {\n                        Object.keys(tooltipObject.metrics).map((key) => {\n                            readableMetrics[AppConfig.getShortNameByMetricName(key).shortName] = tooltipObject.metrics[key];\n                        });\n                    }\n\n                    return {\n                        elementName: tooltipObject.elementName,\n                        metrics: readableMetrics\n                    };\n                })\n            );\n\n        this.tooltipService.hideTooltip$.subscribe(() => {\n            this.hide();\n        });\n\n        this.tooltipService.showTooltip$.subscribe(() => {\n            this.show();\n        });\n\n        this.tooltipService.trackPosition$.subscribe((position) => {\n            this.followPosition(position);\n        });\n\n    }\n\n    followPosition(position: {x: number, y: number}) {\n        this.tooltipElement.style.left = position.x + 15 + 'px';\n        this.tooltipElement.style.top = position.y + 15 + 'px';\n    }\n\n    show() {\n        this.tooltipElement.classList.add('visible');\n    }\n\n    hide() {\n        this.tooltipElement.classList.remove('visible');\n        this.tooltipElement.style.left = '-1000px';\n        this.tooltipElement.style.top = '-1000px';\n    }\n\n}\n","import {INode} from '../../interfaces/INode';\nimport {NodeType} from 'app/enum/NodeType';\nimport {IPackerElement} from '../../interfaces/IPackerElement';\nimport {AppConfig} from '../../AppConfig';\nimport {ElementAnalyzer} from '../../helper/element-analyzer';\nimport {ScreenType} from '../../enum/ScreenType';\nimport {CommitReferenceType} from '../../enum/CommitReferenceType';\nimport {BoxGeometry, Mesh, MeshLambertMaterial, Geometry} from 'three';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\ndeclare var GrowingPacker: any;\n\nexport abstract class AbstractView {\n\n    rootNode: INode;\n    blockElements: Mesh[] = [];\n    packer = new GrowingPacker();\n\n    minModuleLevel = 1;\n    maxModuleLevel: number;\n\n    geometry: Geometry;\n\n    constructor(protected screenType: ScreenType, protected metricMapping: IMetricMapping) {\n        this.geometry = new BoxGeometry(1, 1, 1);\n        this.geometry.translate(0.5, 0.5, 0.5);\n    }\n\n    setMetricTree(root: INode) {\n        this.rootNode = root;\n    }\n\n    recalculate() {\n        if (!this.rootNode) {\n            throw new Error(`rootNode is not defined!`);\n        }\n\n        this.maxModuleLevel = ElementAnalyzer.getMaxModuleLevel(this.rootNode);\n\n        this.calculateGroundAreas([this.rootNode]);\n        this.calculateElements([this.rootNode], null, 0);\n    }\n\n    calculateGroundAreas(nodes: INode[]) {\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        for (const node of nodes) {\n            const element: IPackerElement = { w: 0, h: 0 };\n\n            if (node.type === NodeType.FILE) {\n                const edgeLength = this.getEdgeLength(node.commit1Metrics, node.commit2Metrics);\n                if (!edgeLength) {\n                    element.w = element.h = 0;\n                } else {\n                    element.w = edgeLength * AppConfig.EDGE_LENGTH_FACTOR + 2 * AppConfig.BLOCK_SPACING;\n                    element.h = edgeLength * AppConfig.EDGE_LENGTH_FACTOR + 2 * AppConfig.BLOCK_SPACING;\n                }\n            }\n\n            // recursion\n            if (node.children && node.children.length > 0) {\n                const result = this.calculateGroundAreas(node.children);\n                element.w = result.w + 2 * AppConfig.BLOCK_SPACING;\n                element.h = result.h + 2 * AppConfig.BLOCK_SPACING;\n            }\n\n            node.packerInfo = element;\n        }\n\n        nodes.sort(function (a, b) {\n            return b.packerInfo.w - a.packerInfo.w;\n        });\n\n        this.packer.fit(nodes.map(node => node.packerInfo));\n        return {\n            packer: this.packer.root,\n            w: this.packer.root.w,\n            h: this.packer.root.h\n        };\n    }\n\n    abstract calculateElements(nodes: INode[], parent: INode, bottom: number);\n\n    createBlock(\n        node: INode,\n        parent: INode,\n        color: any,\n        edgeLength: number,\n        bottom: number,\n        height: number,\n        isTransparent: boolean,\n        metrics?: any,\n        commitType?: CommitReferenceType,\n        changeTypes?: any\n    ) {\n        let finalX, finalY, finalZ;\n        let finalWidth, finalHeight, finalDepth;\n\n        const cube = this.createCubeGeometry(color, isTransparent, node.name);\n        finalX = node.packerInfo.fit.x + (parent ? parent.packerInfo.renderedX : 0) + AppConfig.BLOCK_SPACING;\n        finalY = bottom;\n        finalZ = node.packerInfo.fit.y + (parent ? parent.packerInfo.renderedY : 0) + AppConfig.BLOCK_SPACING;\n\n        // save the rendered positions to draw children relative to their parent\n        node.packerInfo.renderedX = finalX;\n        node.packerInfo.renderedY = finalZ;\n\n        finalWidth = node.type === NodeType.FILE ? edgeLength : node.packerInfo.w - 2 * AppConfig.BLOCK_SPACING;\n        finalHeight = height;\n        finalDepth = node.type === NodeType.FILE ? edgeLength : node.packerInfo.h - 2 * AppConfig.BLOCK_SPACING;\n\n        cube.position.x = finalX;\n        cube.position.y = finalY;\n        cube.position.z = finalZ;\n\n        cube.scale.x = finalWidth;\n        cube.scale.y = finalHeight;\n        cube.scale.z = finalDepth;\n\n        cube.userData = this.createUserData(node, parent, bottom, isTransparent, metrics, commitType, changeTypes);\n\n        this.blockElements.push(cube);\n    }\n\n    createCubeGeometry(color: string, isTransparent: boolean, name: string): Mesh {\n        const material = new MeshLambertMaterial({color: color});\n\n        if (isTransparent) {\n            material.transparent = true;\n            material.opacity = 0.4;\n        }\n\n        const block = new Mesh(this.geometry, material);\n        block.name = name;\n        return block;\n    }\n\n    createUserData(\n        node: INode,\n        parent: INode,\n        bottom: number,\n        isTransparent: boolean,\n        metrics: any,\n        commitType?: CommitReferenceType,\n        changeTypes?: any\n    ) {\n        return {\n            parentName: parent ? parent.name : undefined,\n            bottom: bottom,\n            metrics: metrics,\n            type: node.type,\n            elementName: node.name,\n            isHelper: isTransparent,\n            commitType: commitType,\n            changeTypes: changeTypes\n        };\n    }\n\n    getBlockElements(): Mesh[] {\n        return this.blockElements;\n    }\n\n    private getEdgeLength(commit1Metrics: any, commit2Metrics: any): number {\n        const groundAreaValue = ElementAnalyzer.getMaxMetricValueByMetricName(\n            commit1Metrics,\n            commit2Metrics,\n            this.metricMapping.groundAreaMetricName\n        );\n        return Math.sqrt(groundAreaValue);\n    }\n}\n","import {AbstractView} from './abstract-view';\nimport {INode} from '../../interfaces/INode';\nimport {ElementAnalyzer} from '../../helper/element-analyzer';\nimport {AppConfig} from '../../AppConfig';\nimport {NodeType} from '../../enum/NodeType';\nimport {ColorHelper} from '../../helper/color-helper';\nimport {CommitReferenceType} from '../../enum/CommitReferenceType';\nimport {ScreenType} from '../../enum/ScreenType';\nimport {BlockConnection} from 'app/geometry/block-connection';\nimport {Scene} from 'three';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\n\nexport class MergedView extends AbstractView {\n\n    movedElements: any[] = [];\n    connections: BlockConnection[] = [];\n\n    constructor(screenType: ScreenType, metricMapping: IMetricMapping) {\n        super(screenType, metricMapping);\n    }\n\n    calculateElements(nodes: INode[], parent: INode, bottom: number, level: number = 1) {\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            if (!node.packerInfo.fit) {\n                console.warn(`node ${node.name} at position ${this.screenType} has no fit!`);\n                return;\n            }\n\n            let blueHeight;\n\n            // FILE\n            if (node.type === NodeType.FILE) {\n                const blueHeightMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node, this.metricMapping.heightMetricName, CommitReferenceType.THIS, this.screenType\n                );\n                const orangeHeightMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node, this.metricMapping.heightMetricName, CommitReferenceType.OTHER, this.screenType\n                );\n\n                const blueGroundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node, this.metricMapping.groundAreaMetricName, CommitReferenceType.THIS, this.screenType\n                );\n                const orangeGroundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node, this.metricMapping.groundAreaMetricName, CommitReferenceType.OTHER, this.screenType\n                );\n\n                const blueColorMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node, this.metricMapping.colorMetricName, CommitReferenceType.THIS, this.screenType\n                );\n                const orangeColorMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node, this.metricMapping.colorMetricName, CommitReferenceType.OTHER, this.screenType\n                );\n\n                const blueMetrics = {\n                    [this.metricMapping.heightMetricName]: blueHeightMetric,\n                    [this.metricMapping.groundAreaMetricName]: blueGroundAreaMetric,\n                    [this.metricMapping.colorMetricName]: blueColorMetric\n                };\n\n                const orangeMetrics = {\n                    [this.metricMapping.heightMetricName]: orangeHeightMetric,\n                    [this.metricMapping.groundAreaMetricName]: orangeGroundAreaMetric,\n                    [this.metricMapping.colorMetricName]: orangeColorMetric\n                };\n\n                blueHeight = blueHeightMetric * AppConfig.HEIGHT_FACTOR;\n                const orangeHeight = orangeHeightMetric * AppConfig.HEIGHT_FACTOR;\n\n                const blueEdgeLength = Math.sqrt(blueGroundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\n                const orangeEdgeLength = Math.sqrt(orangeGroundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\n\n                const blueColor = ColorHelper.getColorByPosition(this.screenType);\n                const orangeColor = ColorHelper.getContraryColorByColor(blueColor);\n\n                const blueTransparency = blueHeight >= orangeHeight && blueEdgeLength >= orangeEdgeLength;\n                const orangeTransparency = orangeHeight >= blueHeight && orangeEdgeLength >= blueEdgeLength;\n\n                if (!isNaN(blueEdgeLength) && !isNaN(orangeEdgeLength)) {\n                    // both blocks\n                    if (blueEdgeLength < orangeEdgeLength) {\n                        // draw the bigger block ...\n                        this.createBlock(\n                            node,\n                            parent,\n                            orangeColor,\n                            orangeEdgeLength,\n                            bottom,\n                            orangeHeight,\n                            orangeTransparency,\n                            orangeMetrics,\n                            CommitReferenceType.OTHER,\n                            node.changes\n                        );\n\n                        // ... calculate the center position for the smaller block ...\n                        node.packerInfo.fit.x += (orangeEdgeLength - blueEdgeLength) / 2;\n                        node.packerInfo.fit.y += (orangeEdgeLength - blueEdgeLength) / 2;\n\n                        // ... draw the smaller block\n                        this.createBlock(\n                            node,\n                            parent,\n                            blueColor,\n                            blueEdgeLength,\n                            bottom,\n                            blueHeight,\n                            blueTransparency,\n                            blueMetrics,\n                            CommitReferenceType.THIS,\n                            node.changes\n                        );\n                    } else if (blueEdgeLength > orangeEdgeLength) {\n                        // draw the bigger block ...\n                        this.createBlock(\n                            node,\n                            parent,\n                            blueColor,\n                            blueEdgeLength,\n                            bottom,\n                            blueHeight,\n                            blueTransparency,\n                            blueMetrics,\n                            CommitReferenceType.THIS,\n                            node.changes\n                        );\n\n                        // ... calculate the center position for the smaller block ...\n                        node.packerInfo.fit.x += (blueEdgeLength - orangeEdgeLength) / 2;\n                        node.packerInfo.fit.y += (blueEdgeLength - orangeEdgeLength) / 2;\n\n                        // ... draw the smaller block\n                        this.createBlock(\n                            node,\n                            parent,\n                            orangeColor,\n                            orangeEdgeLength,\n                            bottom,\n                            orangeHeight,\n                            orangeTransparency,\n                            orangeMetrics,\n                            CommitReferenceType.OTHER,\n                            node.changes\n                        );\n                    } else {\n                        // ground areas are the same\n                        if (blueHeight !== orangeHeight) {\n                            // heights are different, so draw both blocks\n                            this.createBlock(\n                                node,\n                                parent,\n                                blueColor,\n                                blueEdgeLength,\n                                bottom,\n                                blueHeight,\n                                blueTransparency,\n                                blueMetrics,\n                                CommitReferenceType.THIS,\n                                node.changes\n                            );\n                            this.createBlock(\n                                node,\n                                parent,\n                                orangeColor,\n                                orangeEdgeLength,\n                                bottom,\n                                orangeHeight,\n                                orangeTransparency,\n                                orangeMetrics,\n                                CommitReferenceType.OTHER,\n                                node.changes\n                            );\n                        } else {\n                            // heights are the same, so the file has not changed\n                            this.createBlock(\n                                node,\n                                parent,\n                                AppConfig.COLOR_UNCHANGED_FILE,\n                                orangeEdgeLength,\n                                bottom,\n                                orangeHeight,\n                                false,\n                                orangeMetrics,\n                                undefined,\n                                node.changes\n                            );\n                        }\n                    }\n\n                } else if (isNaN(orangeEdgeLength)) {\n                    // only blue block\n\n                    // cache element to draw connections\n                    if (this.isNodeMoved(node)) {\n                        this.movedElements.push({\n                            fromElementName: node.name,\n                            toElementName: node.renamedTo\n                        });\n                    }\n\n                    this.createBlock(\n                        node,\n                        parent,\n                        AppConfig.COLOR_DELETED_FILE,\n                        blueEdgeLength,\n                        bottom,\n                        blueHeight,\n                        false,\n                        blueMetrics,\n                        CommitReferenceType.THIS,\n                        node.changes\n                    );\n\n                } else if (isNaN(blueEdgeLength)) {\n                    // only orange block\n\n                    this.createBlock(\n                        node,\n                        parent,\n                        AppConfig.COLOR_ADDED_FILE,\n                        orangeEdgeLength,\n                        bottom,\n                        orangeHeight,\n                        false,\n                        orangeMetrics,\n                        CommitReferenceType.OTHER,\n                        node.changes\n                    );\n                }\n\n                // MODULE\n            } else {\n                // don't draw empty modules\n                if (ElementAnalyzer.hasChildrenForCurrentCommit(node, true, this.screenType)) {\n                    blueHeight = AppConfig.MODULE_BLOCK_HEIGHT;\n                    const moduleColor = ColorHelper.getColorByLevelValue(level, this.minModuleLevel, this.maxModuleLevel);\n                    this.createBlock(node, parent, moduleColor, undefined, bottom, blueHeight, false);\n                }\n            }\n\n            // recursion\n            if (node.children && node.children.length > 0) {\n                this.calculateElements(node.children, node, bottom + blueHeight, level + 1);\n            }\n        });\n    }\n\n    calculateConnections(scene: Scene) {\n        for (const movedElementPair of this.movedElements) {\n            const fromElement = scene.getObjectByName(movedElementPair.fromElementName);\n            const toElement = scene.getObjectByName(movedElementPair.toElementName);\n\n            if (fromElement && toElement) {\n                this.connections.push(new BlockConnection(fromElement, toElement));\n            } else {\n                console.warn(`A connection could not be drawn because at least one element could not be found in the scene.`);\n            }\n        }\n    }\n\n    getConnections(): BlockConnection[] {\n        return this.connections;\n    }\n\n    private isNodeMoved(node: INode) {\n        return node.renamedTo != null || node.renamedFrom != null;\n    }\n}\n","import {AbstractView} from './abstract-view';\nimport {INode} from '../../interfaces/INode';\nimport {NodeType} from '../../enum/NodeType';\nimport {AppConfig} from '../../AppConfig';\nimport {CommitReferenceType} from '../../enum/CommitReferenceType';\nimport {ColorHelper} from '../../helper/color-helper';\nimport {ElementAnalyzer} from '../../helper/element-analyzer';\nimport {ScreenType} from '../../enum/ScreenType';\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\n\nexport class SplitView extends AbstractView {\n\n    minColorMetricValue: number;\n    maxColorMetricValue: number;\n\n    constructor(screenType: ScreenType, metricMapping: IMetricMapping) {\n        super(screenType, metricMapping);\n    }\n\n    calculateElements(nodes: INode[], parent: INode, bottom: number, level: number = 1) {\n        const minMaxColorValuePair = ElementAnalyzer.findSmallestAndBiggestMetricValueByMetricName(\n            this.rootNode.children,\n            this.metricMapping.colorMetricName\n        );\n        this.minColorMetricValue = minMaxColorValuePair.min;\n        this.maxColorMetricValue = minMaxColorValuePair.max;\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            // don't draw empty modules\n            if (node.type === NodeType.MODULE && !ElementAnalyzer.hasChildrenForCurrentCommit(node, false, this.screenType)) {\n                return;\n            }\n\n            if (!node.packerInfo.fit) {\n                // tslint:disable-next-line:no-console\n                console.info(`node ${node.name} at position ${this.screenType} has no fit!`);\n                return;\n            }\n\n            const heightMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                node,\n                this.metricMapping.heightMetricName,\n                CommitReferenceType.THIS,\n                this.screenType\n            );\n            const groundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                node,\n                this.metricMapping.groundAreaMetricName,\n                CommitReferenceType.THIS,\n                this.screenType\n            );\n            const colorMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                node,\n                this.metricMapping.colorMetricName,\n                CommitReferenceType.THIS,\n                this.screenType\n            );\n\n            const metrics = {\n                [this.metricMapping.heightMetricName]: heightMetric,\n                [this.metricMapping.groundAreaMetricName]: groundAreaMetric,\n                [this.metricMapping.colorMetricName]: colorMetric\n            };\n\n            let myHeight;\n            if (node.type === NodeType.FILE ) {\n                if (!heightMetric || !groundAreaMetric) {\n                    return;\n                }\n\n                myHeight = heightMetric * AppConfig.HEIGHT_FACTOR;\n\n                const myEdgeLength = Math.sqrt(groundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\n\n                const otherGroundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\n                    node,\n                    this.metricMapping.groundAreaMetricName,\n                    CommitReferenceType.OTHER,\n                    this.screenType\n                );\n                const otherEdgeLength = Math.sqrt(otherGroundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\n\n                const myColor = ColorHelper.getColorByMetricValue(colorMetric, this.maxColorMetricValue, this.minColorMetricValue);\n\n                if (myEdgeLength < otherEdgeLength) {\n                    node.packerInfo.fit.x += (otherEdgeLength - myEdgeLength) / 2;\n                    node.packerInfo.fit.y += (otherEdgeLength - myEdgeLength) / 2;\n                }\n                this.createBlock(node, parent, myColor, myEdgeLength, bottom, myHeight, false, metrics, null, node.changes);\n\n            } else {\n                myHeight = AppConfig.MODULE_BLOCK_HEIGHT;\n                const moduleColor = ColorHelper.getColorByLevelValue(level, this.minModuleLevel, this.maxModuleLevel);\n                this.createBlock(node, parent, moduleColor, undefined, bottom, myHeight, false, metrics);\n            }\n\n            // recursion\n            if (node.children && node.children.length > 0) {\n                this.calculateElements(node.children, node, bottom + myHeight, level + 1);\n            }\n        });\n    }\n\n}\n","import {ICommit} from '../interfaces/ICommit';\nimport {IMetricMapping} from '../interfaces/IMetricMapping';\nimport {INode} from '../interfaces/INode';\nimport { IActionWithPayload } from '../interfaces/IActionWithPayload';\nimport { IMetric } from '../interfaces/IMetric';\nimport { Action } from '@ngrx/store';\n\nexport const LOAD_AVAILABLE_METRICS = 'LOAD_AVAILABLE_METRICS';\nexport const LOAD_AVAILABLE_METRICS_SUCCESS = 'LOAD_AVAILABLE_METRICS_SUCCESS';\nexport const LOAD_AVAILABLE_METRICS_ERROR = 'LOAD_AVAILABLE_METRICS_ERROR';\nexport const LOAD_METRIC_TREE = 'LOAD_METRIC_TREE';\nexport const LOAD_METRIC_TREE_SUCCESS = 'LOAD_METRIC_TREE_SUCCESS';\nexport const LOAD_METRIC_TREE_ERROR = 'LOAD_METRIC_TREE_ERROR';\nexport const GENERATE_UNIQUE_FILE_LIST = 'GENERATE_UNIQUE_FILE_LIST';\n\nexport function loadAvailableMetrics(): Action {\n    return {\n        type: LOAD_AVAILABLE_METRICS\n    };\n}\n\nexport function loadAvailableMetricsSuccess(metricNames: IMetric[]): IActionWithPayload<IMetric[]> {\n    return {\n        type: LOAD_AVAILABLE_METRICS_SUCCESS,\n        payload: metricNames\n    };\n}\n\nexport function loadAvailableMetricsError(error: string): IActionWithPayload<string> {\n    return {\n        type: LOAD_AVAILABLE_METRICS_ERROR,\n        payload: error\n    };\n}\n\nexport function loadMetricTree(\n    leftCommit: ICommit,\n    rightCommit: ICommit,\n    metricMapping: IMetricMapping\n): IActionWithPayload<{leftCommit: ICommit, rightCommit: ICommit, metricMapping: IMetricMapping}> {\n    return {\n        type: LOAD_METRIC_TREE,\n        payload: {\n            leftCommit: leftCommit,\n            rightCommit: rightCommit,\n            metricMapping: metricMapping\n        }\n    };\n}\n\nexport function loadMetricTreeSuccess(metricTree: INode): IActionWithPayload<INode> {\n    return {\n        type: LOAD_METRIC_TREE_SUCCESS,\n        payload: metricTree\n    };\n}\n\nexport function loadMetricTreeError(error: string): IActionWithPayload<string> {\n    return {\n        type: LOAD_METRIC_TREE_ERROR,\n        payload: error\n    };\n}\n\nexport function generateUniqueFileList(metricTree: INode): IActionWithPayload<INode> {\n    return {\n        type: GENERATE_UNIQUE_FILE_LIST,\n        payload: metricTree\n    };\n}\n","module.exports = \"<div id=\\\"stage\\\" class=\\\"split\\\">\\n    <div class=\\\"vertical-line\\\"></div>\\n    <app-loading-indicator *ngIf=\\\"metricsLoading$ | async\\\"></app-loading-indicator>\\n\\n    <app-screen\\n            [screenType]=\\\"screenTypes.left\\\"\\n            [activeViewType]=\\\"activeViewType$ | async\\\"\\n            [activeFilter]=\\\"activeFilter$ | async\\\"\\n            [metricTree]=\\\"metricTree$ | async\\\"\\n            [metricMapping]=\\\"metricMapping$ | async\\\">\\n    </app-screen>\\n\\n    <app-screen\\n            [screenType]=\\\"screenTypes.right\\\"\\n            [activeViewType]=\\\"activeViewType$ | async\\\"\\n            [activeFilter]=\\\"activeFilter$ | async\\\"\\n            [metricTree]=\\\"metricTree$ | async\\\"\\n            [metricMapping]=\\\"metricMapping$ | async\\\">\\n    </app-screen>\\n\\n    <app-comparison-panel\\n            [metricMapping]=\\\"metricMapping$ | async\\\"\\n            [leftCommit]=\\\"leftCommit$ | async\\\"\\n            [rightCommit]=\\\"rightCommit$ | async\\\">\\n    </app-comparison-panel>\\n\\n    <app-legend [activeViewType]=\\\"activeViewType$ | async\\\"></app-legend>\\n</div>\\n<app-tooltip></app-tooltip>\"","module.exports = \"#stage {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n  #stage > .vertical-line {\\n    position: absolute;\\n    top: 0;\\n    left: 100%;\\n    height: 100%;\\n    width: 2px;\\n    background: #535353;\\n    z-index: 98;\\n    transition: left 1s ease; }\\n  #stage.split > .vertical-line {\\n    left: 50%; }\\n\"","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {ScreenType} from '../enum/ScreenType';\nimport {Observable, Subscription, combineLatest} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {Store} from '@ngrx/store';\nimport * as fromRoot from '../shared/reducers';\nimport {loadMetricTree, loadAvailableMetrics} from './visualization.actions';\nimport {ViewType} from '../enum/ViewType';\nimport {IFilter} from '../interfaces/IFilter';\nimport {INode} from '../interfaces/INode';\nimport {IMetricMapping} from '../interfaces/IMetricMapping';\nimport {ComparisonPanelService} from 'app/service/comparison-panel.service';\nimport {ICommit} from '../interfaces/ICommit';\nimport { IMetric } from '../interfaces/IMetric';\n\n@Component({\n    selector: 'app-visualization',\n    templateUrl: './visualization.component.html',\n    styleUrls: ['./visualization.component.scss']\n})\nexport class VisualizationComponent implements OnInit, OnDestroy {\n\n    metricsLoading$: Observable<boolean>;\n    activeViewType$: Observable<ViewType>;\n    activeFilter$: Observable<IFilter>;\n    metricTree$: Observable<INode>;\n    availableMetrics$: Observable<IMetric[]>;\n    metricMapping$: Observable<IMetricMapping>;\n    leftCommit$: Observable<ICommit>;\n    rightCommit$: Observable<ICommit>;\n    colorMetric$: Observable<IMetric>;\n\n    subscriptions: Subscription[] = [];\n\n    screenTypes: any = {\n        left: ScreenType.LEFT,\n        right: ScreenType.RIGHT\n    };\n\n    constructor(private store: Store<fromRoot.AppState>, private comparisonPanelService: ComparisonPanelService) {\n    }\n\n    ngOnInit() {\n        this.metricsLoading$ = this.store.select(fromRoot.getMetricsLoading);\n        this.activeViewType$ = this.store.select(fromRoot.getActiveViewType);\n        this.activeFilter$ = this.store.select(fromRoot.getActiveFilter);\n        this.metricTree$ = this.store.select(fromRoot.getMetricTree);\n        this.availableMetrics$ = this.store.select(fromRoot.getAvailableMetrics);\n        this.metricMapping$ = this.store.select(fromRoot.getMetricMapping);\n        this.leftCommit$ = this.store.select(fromRoot.getLeftCommit);\n        this.rightCommit$ = this.store.select(fromRoot.getRightCommit);\n\n        this.store.dispatch(loadAvailableMetrics());\n\n        this.subscriptions.push(\n            combineLatest(\n                this.store.select(fromRoot.getLeftCommit),\n                this.store.select(fromRoot.getRightCommit),\n                this.store.select(fromRoot.getMetricMapping)\n            ).pipe(\n                filter(([leftCommit, rightCommit, metricMapping]) => !!leftCommit && !!rightCommit)\n            )\n            .subscribe(([leftCommit, rightCommit, metricMapping]) => {\n                this.store.dispatch(loadMetricTree(leftCommit, rightCommit, metricMapping));\n                this.comparisonPanelService.hide();\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription: Subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {VisualizationComponent} from './visualization.component';\nimport {ScreenComponent} from './screen/screen.component';\nimport {MetricService} from '../service/metric.service';\nimport {environment} from '../../environments/environment';\nimport {TooltipComponent} from './tooltip/tooltip.component';\nimport {ComparisonPanelComponent} from './comparison-panel/comparison-panel.component';\nimport {LegendComponent} from './legend/legend.component';\nimport {KeyValuePipe} from '../pipes/key-value.pipe';\nimport {LoadingIndicatorComponent} from './loading-indicator/loading-indicator.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FontAwesomeModule\n    ],\n    declarations: [\n        VisualizationComponent,\n        ScreenComponent,\n        TooltipComponent,\n        ComparisonPanelComponent,\n        LegendComponent,\n        KeyValuePipe,\n        LoadingIndicatorComponent\n    ],\n    exports: [\n        VisualizationComponent\n    ],\n    providers: [\n        MetricService\n    ]\n})\nexport class VisualizationModule {\n}\n","import * as VisualizationActions from './visualization.actions';\nimport {ActionReducer} from '@ngrx/store';\nimport {ElementAnalyzer} from '../helper/element-analyzer';\nimport {INode} from '../interfaces/INode';\nimport { IActionWithPayload } from '../interfaces/IActionWithPayload';\nimport { IMetric } from '../interfaces/IMetric';\n\nexport interface VisualizationState {\n    availableMetricsLoading: boolean;\n    availableMetrics: IMetric[];\n    metricsLoading: boolean;\n    metricTree: INode;\n    uniqueFileList: any[];\n}\n\nconst initialState: VisualizationState = {\n    availableMetricsLoading: false,\n    availableMetrics: [],\n    metricsLoading: false,\n    metricTree: null,\n    uniqueFileList: []\n};\n\nexport const VisualizationReducer: ActionReducer<VisualizationState> = (state = initialState, action: IActionWithPayload<any>) => {\n    let newState;\n    switch (action.type) {\n        case VisualizationActions.LOAD_AVAILABLE_METRICS:\n            newState = Object.assign({}, state);\n            newState.availableMetricsLoading = true;\n            newState.availableMetrics = [];\n            return newState;\n\n        case VisualizationActions.LOAD_AVAILABLE_METRICS_SUCCESS:\n            newState = Object.assign({}, state);\n            newState.availableMetricsLoading = false;\n            newState.availableMetrics = action.payload;\n            return newState;\n\n        case VisualizationActions.LOAD_AVAILABLE_METRICS_ERROR:\n            newState = Object.assign({}, state);\n            newState.availableMetricsLoading = false;\n            console.error(`Error while loading available metrics: ${action.payload}`);\n            return state;\n\n        case VisualizationActions.LOAD_METRIC_TREE:\n            newState = Object.assign({}, state);\n            newState.metricsLoading = true;\n            newState.metricTree = null;\n            newState.uniqueFileList = [];\n            return newState;\n\n        case VisualizationActions.LOAD_METRIC_TREE_SUCCESS:\n            newState = Object.assign({}, state);\n            newState.metricsLoading = false;\n            newState.metricTree = action.payload;\n\n            return newState;\n\n        case VisualizationActions.GENERATE_UNIQUE_FILE_LIST:\n            newState = Object.assign({}, state);\n            newState.uniqueFileList = ElementAnalyzer.generateUniqueElementList(action.payload);\n\n            return newState;\n\n        case VisualizationActions.LOAD_METRIC_TREE_ERROR:\n            newState = Object.assign({}, state);\n            newState.metricsLoading = false;\n            console.error(`Error while loading metrics: ${action.payload}`);\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport const getAvailableMetrics = (state: VisualizationState) => state.availableMetrics;\n\nexport const getMetricsLoading = (state: VisualizationState) => state.metricsLoading;\n\nexport const getMetricTree = (state: VisualizationState) => state.metricTree;\n\nexport const getUniqueFileList = (state: VisualizationState) => state.uniqueFileList;\n","export const environment = {\n    production: false,\n    useCoderadarEndpoint: false\n};\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}